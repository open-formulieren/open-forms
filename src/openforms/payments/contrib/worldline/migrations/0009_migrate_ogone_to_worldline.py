# Generated by Django 4.2.23 on 2025-09-02 12:21

from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

import structlog

from openforms.payments.contrib.ogone.constants import OgoneEndpoints

from ..constants import WorldlineEndpoints

logger = structlog.stdlib.get_logger(__name__)


ENDPOINT_MAPPING = {
    OgoneEndpoints.live: WorldlineEndpoints.live,
    OgoneEndpoints.test: WorldlineEndpoints.test,
}


def migrate_merchants(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    OgoneMerchant = apps.get_model("payments_ogone", "OgoneMerchant")
    WorldlineMerchant = apps.get_model("payments_worldline", "WorldlineMerchant")
    known_pspids = WorldlineMerchant.objects.values_list("pspid", flat=True)
    ogone_merchants = OgoneMerchant.objects.exclude(pspid="").exclude(
        endpoint_preset=""
    )
    new_merchants = []

    for merchant in ogone_merchants:
        if merchant.pspid in known_pspids:
            logger.warning("skipped_merchant_migration", merchant=merchant.pspid)
            continue

        worldline_merchant = WorldlineMerchant(
            label=merchant.label,
            pspid=merchant.pspid,
            api_key=merchant.api_key,
            api_secret=merchant.api_secret,
            endpoint=ENDPOINT_MAPPING[merchant.endpoint_preset],
        )
        new_merchants.append(worldline_merchant)

    WorldlineMerchant.objects.bulk_create(new_merchants)


def migrate_webhook_configuration(
    apps: StateApps, schema_editor: BaseDatabaseSchemaEditor
) -> None:
    OgoneWebhookConfiguration = apps.get_model(
        "payments_ogone", "OgoneWebhookConfiguration"
    )
    WorldlineWebhookConfiguration = apps.get_model(
        "payments_worldline", "WorldlineWebhookConfiguration"
    )

    for ogone_config in OgoneWebhookConfiguration.objects.all():
        wordline_config, _ = WorldlineWebhookConfiguration.objects.get_or_create(
            pspid=ogone_config.pspid
        )

        if not all(
            (ogone_config.webhook_key_id, ogone_config.webhook_key_secret)
        ) or any((wordline_config.webhook_key_id, wordline_config.webhook_key_secret)):
            continue

        wordline_config.webhook_key_id = ogone_config.webhook_key_id
        wordline_config.webhook_key_secret = ogone_config.webhook_key_secret
        wordline_config.save()


class Migration(migrations.Migration):
    dependencies = [
        (
            "payments_worldline",
            "0008_alter_worldlinewebhookconfiguration_options_and_more",
        ),
        ("payments_ogone", "0004_alter_ogonewebhookconfiguration_options_and_more"),
    ]

    operations = [
        migrations.RunPython(migrate_merchants, migrations.RunPython.noop),
        migrations.RunPython(migrate_webhook_configuration, migrations.RunPython.noop),
    ]
