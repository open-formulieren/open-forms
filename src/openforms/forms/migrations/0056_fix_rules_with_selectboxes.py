# Generated by Django 3.2.16 on 2022-11-18 14:55

from django.db import migrations

from openforms.forms.utils import get_total_form_configuration_wrapper
from openforms.utils.json_logic import JsonLogicTest


def fix_rules_for_selectboxes(apps, _):
    Form = apps.get_model("forms", "Form")
    FormLogic = apps.get_model("forms", "FormLogic")

    rules_to_update = []
    for form in Form.objects.all():
        total_config_wrapper = get_total_form_configuration_wrapper(
            form.formstep_set.all()
        )

        for rule in form.formlogic_set.filter(is_advanced=False):
            parsed_trigger = JsonLogicTest.from_expression(rule.json_logic_trigger)

            first_operand = parsed_trigger.values[0]
            if first_operand.operator != "var":
                return

            trigger_component_key = first_operand.values[0]
            if (
                trigger_component_key in total_config_wrapper
                and total_config_wrapper[trigger_component_key]["type"] == "selectboxes"
            ):
                # We know that the trigger is badly formatted, because otherwise the trigger_component_key would
                # be <key>.<value_key>
                compare_value_key = parsed_trigger.values[1]
                rule.json_logic_trigger[parsed_trigger.operator][0] = {
                    "var": f"{trigger_component_key}.{compare_value_key}"
                }
                rule.json_logic_trigger[parsed_trigger.operator][1] = True
                rules_to_update.append(rule)

    FormLogic.objects.bulk_update(rules_to_update, fields=["json_logic_trigger"])


class Migration(migrations.Migration):

    dependencies = [
        ("forms", "0055_make_hidelabel_false"),
    ]

    operations = [
        migrations.RunPython(fix_rules_for_selectboxes, migrations.RunPython.noop),
    ]
