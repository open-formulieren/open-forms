# Generated by Django 2.2.20 on 2021-05-21 10:13

import django.db.models.deletion
from django.db import migrations, models

import privates.fields
import privates.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SoapService",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ontvanger_organisatie",
                    models.CharField(
                        help_text="Field 'ontvanger organisatie' in StUF",
                        max_length=200,
                        verbose_name="receiving organisation",
                    ),
                ),
                (
                    "ontvanger_applicatie",
                    models.CharField(
                        help_text="Field 'ontvanger applicatie' in StUF",
                        max_length=200,
                        verbose_name="receiving application",
                    ),
                ),
                (
                    "ontvanger_administratie",
                    models.CharField(
                        blank=True,
                        help_text="Field 'ontvanger administratie' in StUF",
                        max_length=200,
                        verbose_name="receiving administration",
                    ),
                ),
                (
                    "ontvanger_gebruiker",
                    models.CharField(
                        blank=True,
                        help_text="Field 'ontvanger gebruiker' in StUF",
                        max_length=200,
                        verbose_name="receiving user",
                    ),
                ),
                (
                    "zender_organisatie",
                    models.CharField(
                        help_text="Field 'zender organisatie' in StUF",
                        max_length=200,
                        verbose_name="sending organisation",
                    ),
                ),
                (
                    "zender_applicatie",
                    models.CharField(
                        help_text="Field 'zender applicatie' in StUF",
                        max_length=200,
                        verbose_name="sending application",
                    ),
                ),
                (
                    "zender_administratie",
                    models.CharField(
                        blank=True,
                        help_text="Field 'zender administratie' in StUF",
                        max_length=200,
                        verbose_name="sending administration",
                    ),
                ),
                (
                    "zender_gebruiker",
                    models.CharField(
                        blank=True,
                        help_text="Field 'zender gebruiker' in StUF",
                        max_length=200,
                        verbose_name="sending user",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="URL of the StUF-ZDS service to connect to.",
                        verbose_name="URL",
                    ),
                ),
                (
                    "endpoint_sync",
                    models.CharField(
                        blank=True,
                        help_text="Endpoint for synchronous Soap request, for example '/VerwerkSynchroonVrijBericht'.",
                        max_length=200,
                        verbose_name="endpoint sync requests",
                    ),
                ),
                (
                    "endpoint_async",
                    models.CharField(
                        blank=True,
                        help_text="Endpoint for asynchronous Soap request, usually '/OntvangAsynchroon'.",
                        max_length=200,
                        verbose_name="endpoint async requests",
                    ),
                ),
                (
                    "user",
                    models.CharField(
                        blank=True,
                        help_text="Username to use in the XML security context.",
                        max_length=200,
                        verbose_name="user",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="Password to use in the XML security context.",
                        max_length=200,
                        verbose_name="password",
                    ),
                ),
                (
                    "certificate",
                    privates.fields.PrivateMediaFileField(
                        blank=True,
                        help_text="The SSL certificate file used for client identification. If left empty, mutual TLS is disabled.",
                        null=True,
                        storage=privates.storages.PrivateMediaFileSystemStorage(),
                        upload_to="certificate/",
                    ),
                ),
                (
                    "certificate_key",
                    privates.fields.PrivateMediaFileField(
                        blank=True,
                        help_text="The SSL certificate key file used for client identification. If left empty, mutual TLS is disabled.",
                        null=True,
                        storage=privates.storages.PrivateMediaFileSystemStorage(),
                        upload_to="certificate/",
                    ),
                ),
            ],
            options={
                "verbose_name": "Soap Service",
            },
        ),
        migrations.CreateModel(
            name="StufZDSConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gemeentecode",
                    models.CharField(
                        max_length=32, verbose_name="Gemeentecode to register Zaken"
                    ),
                ),
                (
                    "zds_zaaktype_code",
                    models.CharField(
                        max_length=32,
                        verbose_name="Zaaktype code for newly created Zaken in StUF-ZDS",
                    ),
                ),
                (
                    "zds_zaaktype_omschrijving",
                    models.CharField(
                        max_length=32,
                        verbose_name="Zaaktype description for newly created Zaken in StUF-ZDS",
                    ),
                ),
                (
                    "service",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="stuf_zds_config",
                        to="stuf_zds.SoapService",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
