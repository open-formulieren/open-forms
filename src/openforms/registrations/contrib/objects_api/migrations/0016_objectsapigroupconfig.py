# Generated by Django 4.2.11 on 2024-05-27 13:04

from django.db import migrations, models
import django.db.models.deletion
import openforms.registrations.contrib.objects_api.models
import openforms.template.validators
import openforms.utils.validators


class Migration(migrations.Migration):

    dependencies = [
        ("zgw_consumers", "0020_service_timeout"),
        (
            "registrations_objects_api",
            "0015_alter_objectsapiconfig_objecttype_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="ObjectsAPIGroupConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A recognisable name for this set of Objects APIs.",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "objecttype",
                    models.URLField(
                        blank=True,
                        editable=False,
                        help_text="Default URL of the ProductAanvraag OBJECTTYPE in the Objecttypes API. The objecttype should have the following three attributes: 1) submission_id; 2) type (the type of productaanvraag); 3) data (the submitted form data)",
                        max_length=1000,
                        verbose_name="objecttype",
                    ),
                ),
                (
                    "objecttype_version",
                    models.IntegerField(
                        blank=True,
                        editable=False,
                        help_text="Default version of the OBJECTTYPE in the Objecttypes API",
                        null=True,
                        verbose_name="objecttype version",
                    ),
                ),
                (
                    "productaanvraag_type",
                    models.CharField(
                        blank=True,
                        help_text="Description of the 'ProductAanvraag' type. This value is saved in the 'type' attribute of the 'ProductAanvraag'.",
                        max_length=255,
                        verbose_name="Productaanvraag type",
                    ),
                ),
                (
                    "informatieobjecttype_submission_report",
                    models.URLField(
                        blank=True,
                        help_text="Default URL that points to the INFORMATIEOBJECTTYPE in the Catalogi API to be used for the submission report PDF",
                        max_length=1000,
                        verbose_name="submission report informatieobjecttype",
                    ),
                ),
                (
                    "informatieobjecttype_submission_csv",
                    models.URLField(
                        blank=True,
                        help_text="Default URL that points to the INFORMATIEOBJECTTYPE in the Catalogi API to be used for the submission report CSV",
                        max_length=1000,
                        verbose_name="submission report CSV informatieobjecttype",
                    ),
                ),
                (
                    "informatieobjecttype_attachment",
                    models.URLField(
                        blank=True,
                        help_text="Default URL that points to the INFORMATIEOBJECTTYPE in the Catalogi API to be used for the submission attachments",
                        max_length=1000,
                        verbose_name="attachment informatieobjecttype",
                    ),
                ),
                (
                    "organisatie_rsin",
                    models.CharField(
                        blank=True,
                        help_text="Default RSIN of organization, which creates the INFORMATIEOBJECT",
                        max_length=9,
                        validators=[openforms.utils.validators.RSINValidator()],
                        verbose_name="organisation RSIN",
                    ),
                ),
                (
                    "content_json",
                    models.TextField(
                        default=openforms.registrations.contrib.objects_api.models.get_content_text,
                        help_text="This template is evaluated with the submission data and the resulting JSON is sent to the objects API.",
                        validators=[
                            openforms.template.validators.DjangoTemplateValidator(
                                backend="openforms.template.openforms_backend"
                            )
                        ],
                        verbose_name="JSON content template",
                    ),
                ),
                (
                    "payment_status_update_json",
                    models.TextField(
                        default=openforms.registrations.contrib.objects_api.models.get_payment_status_update_text,
                        help_text="This template is evaluated with the submission data and the resulting JSON is sent to the objects API with a PATCH to update the payment field.",
                        validators=[
                            openforms.template.validators.DjangoTemplateValidator(
                                backend="openforms.template.openforms_backend"
                            )
                        ],
                        verbose_name="payment status update JSON template",
                    ),
                ),
                (
                    "catalogi_service",
                    models.ForeignKey(
                        limit_choices_to={"api_type": "ztc"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="zgw_consumers.service",
                        verbose_name="Catalogi API",
                    ),
                ),
                (
                    "drc_service",
                    models.ForeignKey(
                        limit_choices_to={"api_type": "drc"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="zgw_consumers.service",
                        verbose_name="Documenten API",
                    ),
                ),
                (
                    "objects_service",
                    models.ForeignKey(
                        limit_choices_to={"api_type": "orc"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="zgw_consumers.service",
                        verbose_name="Objects API",
                    ),
                ),
                (
                    "objecttypes_service",
                    models.ForeignKey(
                        limit_choices_to={"api_type": "orc"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="zgw_consumers.service",
                        verbose_name="Objecttypes API",
                    ),
                ),
            ],
            options={
                "verbose_name": "Objects API group",
                "verbose_name_plural": "Objects API groups",
            },
        ),
    ]
