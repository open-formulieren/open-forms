# Generated by Django 4.2.21 on 2025-07-08 16:08

from django.db import migrations, models

import django_jsonform.models.fields
import mozilla_django_oidc_db.fields


class Migration(migrations.Migration):
    dependencies = [
        ("digid_eherkenning_oidc", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="OFEIDASConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates whether OpenID Connect for authentication/authorization is enabled",
                        verbose_name="enable",
                    ),
                ),
                (
                    "oidc_rp_client_id",
                    models.CharField(
                        help_text="OpenID Connect client ID provided by the OIDC Provider",
                        max_length=1000,
                        verbose_name="OpenID Connect client ID",
                    ),
                ),
                (
                    "oidc_rp_client_secret",
                    models.CharField(
                        help_text="OpenID Connect secret provided by the OIDC Provider",
                        max_length=1000,
                        verbose_name="OpenID Connect secret",
                    ),
                ),
                (
                    "oidc_rp_sign_algo",
                    models.CharField(
                        default="HS256",
                        help_text="Algorithm the Identity Provider uses to sign ID tokens",
                        max_length=50,
                        verbose_name="OpenID sign algorithm",
                    ),
                ),
                (
                    "oidc_op_discovery_endpoint",
                    models.URLField(
                        blank=True,
                        help_text="URL of your OpenID Connect provider discovery endpoint ending with a slash (`.well-known/...` will be added automatically). If this is provided, the remaining endpoints can be omitted, as they will be derived from this endpoint.",
                        max_length=1000,
                        verbose_name="Discovery endpoint",
                    ),
                ),
                (
                    "oidc_op_jwks_endpoint",
                    models.URLField(
                        blank=True,
                        help_text="URL of your OpenID Connect provider JSON Web Key Set endpoint. Required if `RS256` is used as signing algorithm.",
                        max_length=1000,
                        verbose_name="JSON Web Key Set endpoint",
                    ),
                ),
                (
                    "oidc_op_authorization_endpoint",
                    models.URLField(
                        help_text="URL of your OpenID Connect provider authorization endpoint",
                        max_length=1000,
                        verbose_name="Authorization endpoint",
                    ),
                ),
                (
                    "oidc_op_token_endpoint",
                    models.URLField(
                        help_text="URL of your OpenID Connect provider token endpoint",
                        max_length=1000,
                        verbose_name="Token endpoint",
                    ),
                ),
                (
                    "oidc_token_use_basic_auth",
                    models.BooleanField(
                        default=False,
                        help_text="If enabled, the client ID and secret are sent in the HTTP Basic auth header when obtaining the access token. Otherwise, they are sent in the request body.",
                        verbose_name="Use Basic auth for token endpoint",
                    ),
                ),
                (
                    "oidc_op_user_endpoint",
                    models.URLField(
                        help_text="URL of your OpenID Connect provider userinfo endpoint",
                        max_length=1000,
                        verbose_name="User endpoint",
                    ),
                ),
                (
                    "oidc_rp_idp_sign_key",
                    models.CharField(
                        blank=True,
                        help_text="Key the Identity Provider uses to sign ID tokens in the case of an RSA sign algorithm. Should be the signing key in PEM or DER format.",
                        max_length=1000,
                        verbose_name="Sign key",
                    ),
                ),
                (
                    "oidc_op_logout_endpoint",
                    models.URLField(
                        blank=True,
                        help_text="URL of your OpenID Connect provider logout endpoint",
                        max_length=1000,
                        verbose_name="Logout endpoint",
                    ),
                ),
                (
                    "oidc_use_nonce",
                    models.BooleanField(
                        default=True,
                        help_text="Controls whether the OpenID Connect client uses nonce verification",
                        verbose_name="Use nonce",
                    ),
                ),
                (
                    "oidc_nonce_size",
                    models.PositiveIntegerField(
                        default=32,
                        help_text="Sets the length of the random string used for OpenID Connect nonce verification",
                        verbose_name="Nonce size",
                    ),
                ),
                (
                    "oidc_state_size",
                    models.PositiveIntegerField(
                        default=32,
                        help_text="Sets the length of the random string used for OpenID Connect state verification",
                        verbose_name="State size",
                    ),
                ),
                (
                    "oidc_keycloak_idp_hint",
                    models.CharField(
                        blank=True,
                        help_text="Specific for Keycloak: parameter that indicates which identity provider should be used (therefore skipping the Keycloak login screen).",
                        max_length=1000,
                        verbose_name="Keycloak Identity Provider hint",
                    ),
                ),
                (
                    "userinfo_claims_source",
                    models.CharField(
                        choices=[
                            ("userinfo_endpoint", "Userinfo endpoint"),
                            ("id_token", "ID token"),
                        ],
                        default="userinfo_endpoint",
                        help_text="Indicates the source from which the user information claims should be extracted.",
                        max_length=100,
                        verbose_name="user information claims extracted from",
                    ),
                ),
                (
                    "loa_claim",
                    mozilla_django_oidc_db.fields.ClaimField(  # type: ignore
                        base_field=models.CharField(
                            max_length=50, verbose_name="claim path segment"
                        ),
                        blank=True,
                        default=None,
                        help_text="Name of the claim holding the level of assurance. If left empty, it is assumed there is no LOA claim and the configured fallback value will be used.",
                        null=True,
                        size=None,
                        verbose_name="LoA claim",
                    ),
                ),
                (
                    "default_loa",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("low", "Laag"),
                            ("substantial", "Substantieel"),
                            ("high", "Hoog"),
                        ],
                        help_text="Fallback level of assurance, in case no claim value could be extracted.",
                        max_length=100,
                        verbose_name="default LOA",
                    ),
                ),
                (
                    "loa_value_mapping",
                    django_jsonform.models.fields.JSONField(
                        blank=True,
                        default=list,
                        help_text="Level of assurance claim value mappings. Useful if the values in the LOA claim are proprietary, so you can translate them into their standardized identifiers.",
                        verbose_name="loa mapping",
                    ),
                ),
                (
                    "person_identifier_claim",
                    mozilla_django_oidc_db.fields.ClaimField(  # type: ignore
                        base_field=models.CharField(
                            max_length=50, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "urn:etoegang:1.12:EntityConcernedID:PseudoID"
                        ),
                        help_text="Name of the claim holding the identifier of the authenticated user.",
                        size=None,
                        verbose_name="person identifier claim",
                    ),
                ),
                (
                    "person_identifier_type_claim",
                    mozilla_django_oidc_db.fields.ClaimField(  # type: ignore
                        base_field=models.CharField(
                            max_length=50, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "namequalifier"
                        ),
                        help_text="Claim that specifies how the person identifier claim must be interpreted. The expected claim value is one of: 'bsn', 'pseudo' or 'national_id'.",
                        size=None,
                        verbose_name="person identifier type claim",
                    ),
                ),
                (
                    "first_name_claim",
                    mozilla_django_oidc_db.fields.ClaimField(  # type: ignore
                        base_field=models.CharField(
                            max_length=50, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "urn:etoegang:1.9:attribute:FirstName"
                        ),
                        help_text="Claim that holds the legal name of the authenticated user.",
                        size=None,
                        verbose_name="person first name claim",
                    ),
                ),
                (
                    "family_name_claim",
                    mozilla_django_oidc_db.fields.ClaimField(  # type: ignore
                        base_field=models.CharField(
                            max_length=50, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "urn:etoegang:1.9:attribute:FamilyName"
                        ),
                        help_text="Claim that holds the legal family name of the authenticated user.",
                        size=None,
                        verbose_name="person family name claim",
                    ),
                ),
                (
                    "date_of_birth_claim",
                    mozilla_django_oidc_db.fields.ClaimField(  # type: ignore
                        base_field=models.CharField(
                            max_length=50, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "urn:etoegang:1.9:attribute:DateOfBirth"
                        ),
                        help_text="Claim that holds the legal birthdate of the authenticated user.",
                        size=None,
                        verbose_name="person date of birth claim",
                    ),
                ),
                (
                    "mandate_service_id_claim",
                    mozilla_django_oidc_db.fields.ClaimField(  # type: ignore
                        base_field=models.CharField(
                            max_length=50, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "urn:etoegang:core:ServiceID"
                        ),
                        help_text="Name of the claim holding the service ID for which the acting subject is authorized.",
                        size=None,
                        verbose_name="service ID claim",
                    ),
                ),
                (
                    "company_identifier_claim",
                    django_jsonform.models.fields.ArrayField(
                        base_field=models.CharField(
                            max_length=100, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "urn:etoegang:1.11:EntityConcernedID:eIDASLegalIdentifier"
                        ),
                        help_text="Name of the claim holding the identifier of the authenticated company.",
                        size=None,
                        verbose_name="company identifier claim",
                    ),
                ),
                (
                    "company_name_claim",
                    django_jsonform.models.fields.ArrayField(
                        base_field=models.CharField(
                            max_length=100, verbose_name="claim path segment"
                        ),
                        default=mozilla_django_oidc_db.fields.ClaimFieldDefault(
                            "urn:etoegang:1.11:attribute-represented:CompanyName"
                        ),
                        help_text="Claim that holds the name of the authenticated company.",
                        size=None,
                        verbose_name="company name claim",
                    ),
                ),
                (
                    "oidc_rp_scopes_list",
                    django_jsonform.models.fields.ArrayField(
                        base_field=models.CharField(
                            max_length=50, verbose_name="OpenID Connect scope"
                        ),
                        blank=True,
                        default=["openid", "profile"],
                        help_text="OpenID Connect scopes that are requested during login. These scopes are hardcoded and must be supported by the identity provider.",
                        size=None,
                        verbose_name="OpenID Connect scopes",
                    ),
                ),
            ],
            options={
                "verbose_name": "eIDAS (OIDC)",
            },
        ),
    ]
