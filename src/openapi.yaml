openapi: 3.0.3
info:
  title: Open Forms API
  version: 2.5.0
  description: |2

    Open Forms provides an API to manage multi-page or multi-step forms.

    It supports listing and retrieving forms, which are made up of form steps. Each form
    step has a form definition driven by [FormIO.js](https://github.com/formio/formio.js/)
    definitions.

    Submissions of forms are supported, where each form step can be submitted individually.
    Complete submissions are sent to the configured backend, which is a pluggable system
    to hook into [Open Zaak](https://openzaak.org), [Camunda](https://camunda.com/) or
    other systems.

    Open Forms fits in the [Common Ground](https://commonground.nl) vision and architecture,
    and it plays nice with other available components.
  contact:
    url: https://github.com/maykinmedia/open-forms
    email: support@maykinmedia.nl
  license:
    name: UNLICENSED
paths:
  /api/v2/analytics/analytics_tools_config_info:
    get:
      operationId: analytics_analytics_tools_config_info_retrieve
      description: Haal informatie op over de analytics-tools voor de frontend.
      summary: Analytics tools-configuratie
      tags:
      - analytics
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsToolsConfig'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/appointments/{submission_uuid}/cancel:
    post:
      operationId: appointments_cancel_create
      summary: Cancel an appointment
      parameters:
      - in: path
        name: submission_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelAppointmentInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelAppointmentInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelAppointmentInput'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Unable to verify ownership of the appointment.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Unable to cancel appointment.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/appointments/appointments:
    post:
      operationId: appointments_appointments_create
      summary: Create an appointment
      tags:
      - appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Invalid submission data.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Invalid or missing submission in session.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Unable to cancel appointment.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
      parameters:
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
  /api/v2/appointments/customer-fields:
    get:
      operationId: appointments_customer_fields_retrieve
      description: |-
        Retrieve the customer fields required for the appointment.

        Note that this requires valid querystring parameters to get results. You will get
        an HTTP 400 on invalid input parameters.

        The required fields are returned as an array of Form.io component definitions,
        with ready to use component keys, labels and relevant validators.
      summary: Get required customer field details for a given product
      parameters:
      - in: query
        name: product_id
        schema:
          type: array
          items:
            type: string
          minLength: 1
        description: ID of the product, repeat for multiple products.
        required: true
        explode: true
        style: form
      tags:
      - appointments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Een Form.io componentdefinitie. De `type`-, `key`-
                    en `label`-eigenschappen zijn gegarandeerd aanwezig en niet-leeg.
                  properties:
                    type:
                      type: string
                      description: Component type
                    key:
                      type: string
                      description: Form field name
                    label:
                      type: string
                      description: Form field label
                  additionalProperties: {}
                  title: Form.io component
                minLength: 1
          description: Customer fields list as Form.io components.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Invalid input parameters.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Insufficient permissions.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/appointments/dates:
    get:
      operationId: appointments_dates_list
      description: |-
        List all dates for a given product.

        Note that you must include valid querystring parameters to get actual results. If
        you don't, then an empty list is returned.
      summary: List available dates for a given location and product
      parameters:
      - in: query
        name: location_id
        schema:
          type: string
        description: ID of the location
        required: true
      - in: query
        name: product_id
        schema:
          type: array
          items:
            type: string
          minLength: 1
        description: ID of the product, repeat for multiple products.
        required: true
        explode: true
        style: form
      tags:
      - appointments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Date'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/appointments/locations:
    get:
      operationId: appointments_locations_list
      description: |-
        List all locations for a given product.

        Note that you must include valid querystring parameters to get actual results. If
        you don't, then an empty list is returned.
      summary: List available locations for a given product
      parameters:
      - in: query
        name: product_id
        schema:
          type: array
          items:
            type: string
          minLength: 1
        description: ID of the product, repeat for multiple products.
        required: true
        explode: true
        style: form
      tags:
      - appointments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/appointments/products:
    get:
      operationId: appointments_products_list
      description: List all products a user can choose when making an appointment.
      summary: List available products
      parameters:
      - in: query
        name: product_id
        schema:
          type: array
          items:
            type: string
          minLength: 1
        description: ID of the product, repeat for multiple products.
        explode: true
        style: form
      tags:
      - appointments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentProduct'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/appointments/times:
    get:
      operationId: appointments_times_list
      description: |-
        List all times for a given product.

        Note that you must include valid querystring parameters to get actual results. If
        you don't, then an empty list is returned.
      summary: List available times for a given location, product, and date
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
        description: The date
        required: true
      - in: query
        name: location_id
        schema:
          type: string
        description: ID of the location
        required: true
      - in: query
        name: product_id
        schema:
          type: array
          items:
            type: string
          minLength: 1
        description: ID of the product, repeat for multiple products.
        required: true
        explode: true
        style: form
      tags:
      - appointments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Time'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/authentication/{uuid}/session:
    delete:
      operationId: submission_session_destroy
      description: 'Calling this endpoint will clear the current form and submission
        from the session. This also clears the form authentication state and calls
        the authentication plugin logout handler, if authenticated. '
      summary: Delete form session
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - authentication
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/authentication/plugins:
    get:
      operationId: authentication_plugins_list
      description: |-
        List all authentication plugins that have been registered.

        Each authentication plugin is tied to a particular (third-party) authentication
        provider. An authentication plugin usually provides a particular authentication
        attribute, such as the ``BSN`` or Chamber of Commerce number. A plugin may provide
        zero, one or multiple authentication attributes.
      summary: List available authentication plugins
      tags:
      - authentication
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthPlugin'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/categories:
    get:
      operationId: categories_list
      tags:
      - categories
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/categories/{uuid}:
    get:
      operationId: categories_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/config/privacy_policy_info:
    get:
      operationId: config_privacy_policy_info_retrieve
      summary: Privacybeleid informatie
      tags:
      - config
      security:
      - tokenAuth: []
      - cookieAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivacyPolicyInfo'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/dmn/decision-definitions:
    get:
      operationId: dmn_decision_definitions_list
      description: List the available decision definitions for a given plugin.
      summary: List available decision definitions
      parameters:
      - in: query
        name: engine
        schema:
          type: string
          enum:
          - camunda7
        description: Identifier of the decision engine to query. Note that some engines
          may be disabled at runtime.
        required: true
      tags:
      - dmn
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DecisionDefinition'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/dmn/decision-definitions/versions:
    get:
      operationId: dmn_decision_definitions_versions_list
      description: |-
        List the available versions of a given definition.

        If the selected engine supports multiple versions of decision definitions, they can
        be retrieved through this endpoint. You must specify the engine and selected
        definition ID.
      summary: List available decision definition versions
      parameters:
      - in: query
        name: definition
        schema:
          type: string
        description: Identifier of the definition to retrieve available versions for.
        required: true
      - in: query
        name: engine
        schema:
          type: string
          enum:
          - camunda7
        description: Identifier of the decision engine to query. Note that some engines
          may be disabled at runtime.
        required: true
      tags:
      - dmn
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DecisionDefinitionVersion'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/dmn/decision-definitions/xml:
    get:
      operationId: dmn_decision_definitions_xml_retrieve
      summary: Retrieve the decision definition XML
      parameters:
      - in: query
        name: definition
        schema:
          type: string
        description: Identifier of the definition to retrieve available versions for.
        required: true
      - in: query
        name: engine
        schema:
          type: string
          enum:
          - camunda7
        description: Identifier of the decision engine to query. Note that some engines
          may be disabled at runtime.
        required: true
      - in: query
        name: version
        schema:
          type: string
      tags:
      - dmn
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionDefinitionXML'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/dmn/plugins:
    get:
      operationId: dmn_plugins_list
      description: List all decision plugins that have been registered.
      summary: List available decision plugins
      tags:
      - dmn
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DecisionPlugin'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/form-definitions:
    get:
      operationId: form_definitions_list
      description: |-
        Geef een lijst van bestaande formulierdefinities waarin één enkele definitie herbruikbaar of voor éénmalig gebruik kan zijn. Dit is inclusief definities die in geen enkel formulier gebruikt zijn.

        Je kan deze lijst filteren op enkel herbruikbare definities of definities die in een specifiek formulier gebruikt worden.

        **Merk op**: tegelijk filteren op `is_reusable` en `used_in` is geïmplementeerd als een OF-filter - je krijgt dus beide resultaten terug.

        **Waarschuwing: de gegevens in het antwoord zijn afhankelijk van je gebruikersrechten**

        Gebruikers die geen beheerder zijn, ontvangen maar een deel van de gedocumenteerde velden. De velden die enkel voor beheerders beschikbaar zijn, zijn voor interne formulierconfiguratie. Het gaat om de velden:

        - `translations`
      summary: List form step definitions
      parameters:
      - in: query
        name: is_reusable
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: used_in
        schema:
          type: string
          format: uuid
      tags:
      - forms
      - form-definitions
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormDefinitionList'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    post:
      operationId: form_definitions_create
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Create a form definition
      tags:
      - forms
      - form-definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDefinition'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinition'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/form-definitions/{uuid}:
    get:
      operationId: form_definitions_retrieve
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Retrieve form step definition details
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      - form-definitions
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionDetail'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    put:
      operationId: form_definitions_update
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Update all details of a form definition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      - form-definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDefinition'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinition'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    patch:
      operationId: form_definitions_partial_update
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Update some details of a form definition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      - form-definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormDefinition'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinition'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    delete:
      operationId: form_definitions_destroy
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Delete a form definition
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      - form-definitions
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/form-definitions/{uuid}/configuration:
    get:
      operationId: form_definitions_configuration_retrieve
      description: |-
        Return the raw FormIO.js configuration definition.

        This excludes all the meta-data and just returns the JSON schema blob. In
        theory, this can be fed directly to a FormIO.js renderer, but note that there
        may be custom field types in play.
      summary: Retrieve form definition JSON schema
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      - form-definitions
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/formio/fileupload:
    post:
      operationId: formio_fileupload_create
      description: |-
        Bestandsuploadhandler voor het Form.io bestandsupload opslagtype 'url'.

        Bestandsuploads worden tijdelijke opgeslagen en moeten gekoppeld worden aan een inzending.

        Toegang tot dit endpoint vereist een actieve formulier inzending. Niet gekoppelde bestanden worden automatisch verwijderd na 2 dag(en).

        De maximale toegestane upload-bestandsgrootte is `50,0 MB` voor deze instantie. Merk op dat dit inclusief multipart-metadata en boundaries is. De daadwerkelijke maximale bestandsgrootte is dus iets lager dan deze waarde.
      summary: Create temporary file upload
      tags:
      - formio
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemporaryFileUpload'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryFileUpload'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
      parameters:
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
  /api/v2/forms:
    get:
      operationId: forms_list
      description: |-
        Geef een lijst van actieve formulieren, inclusief verwijzingen naar de formulierstappen. De formulierstappen komen voor in de volgorde waarin ze zichtbaar moeten zijn.

        **Waarschuwing: de gegevens in het antwoord zijn afhankelijk van je gebruikersrechten**

        Gebruikers die geen beheerder zijn, ontvangen maar een deel van de gedocumenteerde velden. De velden die enkel voor beheerders beschikbaar zijn, zijn voor interne formulierconfiguratie. Het gaat om de velden:

        - `internalName`
        - `registrationBackends`
        - `registrationBackend`
        - `registrationBackendOptions`
        - `authenticationBackendOptions`
        - `paymentBackend`
        - `paymentBackendOptions`
        - `product`
        - `category`
        - `theme`
        - `activateOn`
        - `deactivateOn`
        - `isDeleted`
        - `submissionConfirmationTemplate`
        - `askPrivacyConsent`
        - `askStatementOfTruth`
        - `submissionsRemovalOptions`
        - `confirmationEmailTemplate`
        - `sendConfirmationEmail`
        - `displayMainWebsiteLink`
        - `includeConfirmationPageContentInPdf`
        - `translations`
        - `brpPersonenRequestOptions`
      summary: List forms
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    post:
      operationId: forms_create
      description: |-
        Manage forms.

        Forms are collections of form steps, where each form step points to a formio.js
        form definition. Multiple definitions are combined in logical steps to build a
        multi-step/page form for end-users to fill out. Form definitions can be (and are)
        re-used among different forms.

        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `internalName`
        - `registrationBackends`
        - `registrationBackend`
        - `registrationBackendOptions`
        - `authenticationBackendOptions`
        - `paymentBackend`
        - `paymentBackendOptions`
        - `product`
        - `category`
        - `theme`
        - `activateOn`
        - `deactivateOn`
        - `isDeleted`
        - `submissionConfirmationTemplate`
        - `askPrivacyConsent`
        - `askStatementOfTruth`
        - `submissionsRemovalOptions`
        - `confirmationEmailTemplate`
        - `sendConfirmationEmail`
        - `displayMainWebsiteLink`
        - `includeConfirmationPageContentInPdf`
        - `translations`
        - `brpPersonenRequestOptions`
      summary: Create form
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms-import:
    post:
      operationId: forms_import_create
      description: |-
        Import a Form by uploading a .zip file containing a Form, FormDefinitions
        and FormSteps
      summary: Import form
      tags:
      - forms
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FormImport'
        required: true
      security:
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{form_uuid_or_slug}/steps:
    get:
      operationId: forms_steps_list
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: List form steps
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    post:
      operationId: forms_steps_create
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Create a form step
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormStep'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{form_uuid_or_slug}/steps/{uuid}:
    get:
      operationId: forms_steps_retrieve
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Retrieve form step details
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    put:
      operationId: forms_steps_update
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Update all details of a form step
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormStep'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    patch:
      operationId: forms_steps_partial_update
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Update some details of a form step
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFormStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFormStep'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    delete:
      operationId: forms_steps_destroy
      description: |-
        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `translations`
      summary: Delete a form step
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{form_uuid_or_slug}/versions:
    get:
      operationId: forms_versions_list
      summary: List form versions
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifying the form.
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormVersion'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    post:
      operationId: forms_versions_create
      description: Save the current version of the form so that it can later be retrieved
      summary: Save form version
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifying the form.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormVersion'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormVersion'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{form_uuid_or_slug}/versions/{uuid}/restore:
    post:
      operationId: forms_versions_restore_create
      description: Restore a previously saved version of a form.
      summary: Restore form version
      parameters:
      - in: path
        name: form_uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifying the form.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
        description: The UUID of the form version
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormVersion'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{uuid_or_slug}:
    get:
      operationId: forms_retrieve
      description: |-
        Haal de details/configuratie op van een specifiek formulier.

        Een formulier is een verzameling van één of meerdere formulierstappen waarbij elke stap een verwijzing heeft naar een formio.js formulierdefinitie. Meerdere definities samen vormen een logisch geheel van formulierstappen die de klant doorloopt tijdens het invullen van het formulier. Formulierdefinities kunnen herbruikbaar zijn tussen verschillende formulieren.

        **Waarschuwing: de response-data is afhankelijk van de gebruikersrechten**

        Gebruikers die geen beheerder zijn, ontvangen maar een deel van de gedocumenteerde velden. De velden die enkel voor beheerders beschikbaar zijn, zijn voor interne formulierconfiguratie. Het gaat om de velden:

        - `internalName`
        - `registrationBackends`
        - `registrationBackend`
        - `registrationBackendOptions`
        - `authenticationBackendOptions`
        - `paymentBackend`
        - `paymentBackendOptions`
        - `product`
        - `category`
        - `theme`
        - `activateOn`
        - `deactivateOn`
        - `isDeleted`
        - `submissionConfirmationTemplate`
        - `askPrivacyConsent`
        - `askStatementOfTruth`
        - `submissionsRemovalOptions`
        - `confirmationEmailTemplate`
        - `sendConfirmationEmail`
        - `displayMainWebsiteLink`
        - `includeConfirmationPageContentInPdf`
        - `translations`
        - `brpPersonenRequestOptions`

        Wanneer meertaligheid niet ingeschakeld is voor het formulier, dan wordt de standaardtaal (`settings.LANGUAGE_CODE`) geforceerd gezet in een language cookie. De actieve taal wordt gecommuniceerd in de Content-Language response header. De gebruikelijke HTTP Content Negotiation principes zijn van toepassing.
      summary: Retrieve form details
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    put:
      operationId: forms_update
      description: |-
        Manage forms.

        Forms are collections of form steps, where each form step points to a formio.js
        form definition. Multiple definitions are combined in logical steps to build a
        multi-step/page form for end-users to fill out. Form definitions can be (and are)
        re-used among different forms.

        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `internalName`
        - `registrationBackends`
        - `registrationBackend`
        - `registrationBackendOptions`
        - `authenticationBackendOptions`
        - `paymentBackend`
        - `paymentBackendOptions`
        - `product`
        - `category`
        - `theme`
        - `activateOn`
        - `deactivateOn`
        - `isDeleted`
        - `submissionConfirmationTemplate`
        - `askPrivacyConsent`
        - `askStatementOfTruth`
        - `submissionsRemovalOptions`
        - `confirmationEmailTemplate`
        - `sendConfirmationEmail`
        - `displayMainWebsiteLink`
        - `includeConfirmationPageContentInPdf`
        - `translations`
        - `brpPersonenRequestOptions`
      summary: Update all details of a form
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    patch:
      operationId: forms_partial_update
      description: |-
        Manage forms.

        Forms are collections of form steps, where each form step points to a formio.js
        form definition. Multiple definitions are combined in logical steps to build a
        multi-step/page form for end-users to fill out. Form definitions can be (and are)
        re-used among different forms.

        **Warning: the response data depends on user permissions**

        Non-staff users receive a subset of the documented fields which are used
        for internal form configuration. These fields are:

        - `internalName`
        - `registrationBackends`
        - `registrationBackend`
        - `registrationBackendOptions`
        - `authenticationBackendOptions`
        - `paymentBackend`
        - `paymentBackendOptions`
        - `product`
        - `category`
        - `theme`
        - `activateOn`
        - `deactivateOn`
        - `isDeleted`
        - `submissionConfirmationTemplate`
        - `askPrivacyConsent`
        - `askStatementOfTruth`
        - `submissionsRemovalOptions`
        - `confirmationEmailTemplate`
        - `sendConfirmationEmail`
        - `displayMainWebsiteLink`
        - `includeConfirmationPageContentInPdf`
        - `translations`
        - `brpPersonenRequestOptions`
      summary: Update given details of a form
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedForm'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    delete:
      operationId: forms_destroy
      description: Destroying a form leads to a soft-delete to protect related submissions.
        These deleted forms are no longer visible in the API endpoints.
      summary: Mark form as deleted
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{uuid_or_slug}/admin-message:
    post:
      operationId: forms_admin_message_create
      description: |-
        Prepare the relevant message to be displayed in the admin.

        On form create/update, a success message is displayed to the end user on
        page reload. This exact message varies with the type of submit action that was
        performed and whether the object was created or updated.

        This endpoint is only available for staff users and prepares messages for display
        in the admin environment.
      summary: Prepare form edit admin message
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormAdminMessage'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormAdminMessage'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{uuid_or_slug}/copy:
    post:
      operationId: forms_copy_create
      description: |-
        Create a copy of a form.

        Copying a form copies the meta-data of the form and the steps included.
        Referenced form definitions inside the form steps are re-used instead of
        new copies being created.
      summary: Copy form
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      responses:
        '201':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL of the created resource
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
  /api/v2/forms/{uuid_or_slug}/export:
    post:
      operationId: forms_export_create
      description: |-
        Export a form with the related steps and form definitions as a ZIP-file.

        The exported ZIP-file can be used to import complete forms.
      summary: Export form
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: string
        description: Either a UUID4 or a slug identifiying the form.
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/zip:
              schema:
                type: string
                format: binary
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{uuid_or_slug}/logic-rules:
    get:
      operationId: forms_logic_rules_list
      description: List all logic rules defined for a form.
      summary: List logic rules
      parameters:
      - in: path
        name: uuid_or_slug
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - logic-rules
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormLogic'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    put:
      operationId: forms_logic_rules_update
      description: By sending a list of LogicRules to this endpoint, all the LogicRules
        related to the form will be replaced with the data sent to the endpoint.
      summary: Bulk configure logic rules
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - logic-rules
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FormLogic'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormLogic'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{uuid_or_slug}/price-logic-rules:
    get:
      operationId: forms_price_logic_rules_list
      description: List all price logic rules defined for a form.
      summary: List price logic rules
      parameters:
      - in: path
        name: uuid_or_slug
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - logic-rules
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormPriceLogic'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    put:
      operationId: forms_price_logic_rules_update
      description: By sending a list of FormPriceLogic to this endpoint, all the FormPriceLogic
        related to the form will be replaced with the data sent to the endpoint.
      summary: Bulk configure price logic rules
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - logic-rules
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FormPriceLogic'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormPriceLogic'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/forms/{uuid_or_slug}/variables:
    get:
      operationId: forms_variables_list
      description: List all variables defined for a form.
      summary: List form variables
      parameters:
      - in: query
        name: source
        schema:
          type: string
          enum:
          - component
          - user_defined
        description: Filter by form variable source
      - in: path
        name: uuid_or_slug
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - forms
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormVariable'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    put:
      operationId: forms_variables_update
      description: By sending a list of FormVariables to this endpoint, all the FormVariables
        related to the form will be replaced with the data sent to the endpoint.
      summary: Bulk configure form variables
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid_or_slug
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FormVariable'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormVariable'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/geo/address-autocomplete:
    get:
      operationId: geo_address_autocomplete_retrieve
      description: |-
        Get the street name and city for a given postal code and house number.

        **NOTE** the `/api/v2/location/get-street-name-and-city/` endpoint will be removed in v3. Use `/api/v2/geo/address-autocomplete/` instead.
      summary: Get a street name and city
      parameters:
      - in: query
        name: house_number
        schema:
          type: number
        description: House number of the address
        required: true
      - in: query
        name: postcode
        schema:
          type: string
        description: Postal code of the address
        required: true
      tags:
      - geo
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreetNameAndCityViewResult'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/geo/address-search:
    get:
      operationId: geo_address_search_list
      description: |-
        Get a list of addresses, ordered by relevance/match score of the input query. Note that only results having latitude/longitude data are returned.

        The results are retrieved from the configured geo search service, defaulting to the Kadaster location server.
      summary: List address suggestions with coordinates.
      parameters:
      - in: query
        name: q
        schema:
          type: string
        description: Search query for the address to retrieve suggestions with geo-information
          for.
        required: true
      tags:
      - geo
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressSearchResult'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/geo/latlng-search:
    get:
      operationId: geo_latlng_search_retrieve
      description: Get the closest address name based on the given longitude and latitude.
      summary: Get an adress based on coordinates
      parameters:
      - in: query
        name: lat
        schema:
          type: number
          format: float
        description: The latitude of the location, in decimal degrees.
        required: true
      - in: query
        name: lng
        schema:
          type: number
          format: float
        description: The longitude of the location, in decimal degrees.
        required: true
      tags:
      - geo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LatLngSearchResult'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/i18n/formio/{language}:
    get:
      operationId: i18n_formio_retrieve
      description: Retrieve the translations for the strings used by FormIO.
      summary: Get FormIO translations
      parameters:
      - in: path
        name: language
        schema:
          type: string
          enum:
          - en
          - nl
        description: Language code to retrieve the messages for.
        required: true
      tags:
      - translations
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/i18n/info:
    get:
      operationId: i18n_info_retrieve
      summary: List available languages and the currently active one.
      tags:
      - translations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageInfo'
              examples:
                SelectedDutch:
                  value:
                    languages:
                    - code: en
                      name: English
                    - code: nl
                      name: Nederlands
                    current: nl
                  summary: Selected Dutch
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/i18n/language:
    put:
      operationId: i18n_language_update
      summary: Set the desired language
      tags:
      - translations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LanguageCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LanguageCode'
        required: true
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/location/get-street-name-and-city:
    get:
      operationId: location_get_street_name_and_city_retrieve
      description: |-
        Get the street name and city for a given postal code and house number.

        **NOTE** the `/api/v2/location/get-street-name-and-city/` endpoint will be removed in v3. Use `/api/v2/geo/address-autocomplete/` instead.
      summary: Get a street name and city
      parameters:
      - in: query
        name: house_number
        schema:
          type: number
        description: House number of the address
        required: true
      - in: query
        name: postcode
        schema:
          type: string
        description: Postal code of the address
        required: true
      tags:
      - location
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreetNameAndCityViewResult'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/logic/description:
    post:
      operationId: logic_description_create
      description: |-
        Generate a more human-readable description of a given JsonLogic expression.

        This endpoint takes into account (optionally) client-provided sub-expression
        descriptions via the ``_meta.description`` path. E.g. an input like:

        ```json
        {
          "==": [
            {"var": "foo"},
            {
                "+": [{"var": "a"}, {"var": "b"}],
                "_meta": {"description": "a + b"},
            },
          ]
        }
        ```

        would result in a description like:

            {{foo}} is equal to a + b

        The input expression must be a valid JsonLogic expression, otherwise the endpoint
        returns HTTP 400 validation errors.
      summary: Generate JsonLogic description
      tags:
      - logic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicDescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogicDescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogicDescription'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicDescription'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/payment/plugins:
    get:
      operationId: payment_plugins_list
      description: |-
        List all payment plugins that have been registered.

        Each payment plugin is tied to a particular (third-party) payment
        provider.
      summary: List available payment plugins
      tags:
      - payment
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentPlugin'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/ping:
    get:
      operationId: ping_retrieve
      description: Pinging the API extends the user session. Note that you must be
        a staff user or have active submission(s) in your session.
      summary: Ping the API
      tags:
      - ping
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/prefill/plugins:
    get:
      operationId: prefill_plugins_list
      description: List all prefill plugins that have been registered.
      summary: List available prefill plugins
      parameters:
      - in: query
        name: componentType
        schema:
          type: string
        description: Geef enkel plugins die relevant zijn voor het opgegeven componenttype.
      tags:
      - prefill
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrefillPlugin'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/prefill/plugins/{plugin}/attributes:
    get:
      operationId: prefill_plugins_attributes_list
      description: List the available prefill attributes for a given plugin.
      summary: List available attributes
      parameters:
      - in: path
        name: plugin
        schema:
          type: string
        required: true
      tags:
      - prefill
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrefillAttribute'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/products:
    get:
      operationId: products_list
      description: |-
        List and retrieve the products registered in the admin interface.

        Note that these endpoints are only available to authenticated admin users. The
        products functionality is minimal to be able to register prices. In the future,
        probably a dedicated products catalogue will become relevant.
      summary: List available products
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      tags:
      - products
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/products/{uuid}:
    get:
      operationId: products_retrieve
      description: |-
        List and retrieve the products registered in the admin interface.

        Note that these endpoints are only available to authenticated admin users. The
        products functionality is minimal to be able to register prices. In the future,
        probably a dedicated products catalogue will become relevant.
      summary: Retrieve details of a single product
      parameters:
      - in: header
        name: X-CSP-Nonce
        schema:
          type: string
        description: The value of the CSP nonce generated by the page embedding the
          SDK. If provided, fields containing rich text from WYSIWYG editors will
          be post-processed to allow inline styles with the provided nonce. If the
          embedding page emits a `style-src` policy containing `unsafe-inline`, then
          you can omit this header without losing functionality. We recommend favouring
          the nonce mechanism though.
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
          description: Globally unique identifier
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/registration/attributes:
    get:
      operationId: registration_attributes_list
      description: List the available registration attributes.
      summary: List available registration attributes
      tags:
      - registration
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistrationAttribute'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/registration/informatieobjecttypen:
    get:
      operationId: registration_informatieobjecttypen_list
      description: List the available InformatieObjectTypen based on the configured
        registration backend and ZGW APIs services.
      summary: List available InformatieObjectTypen
      parameters:
      - in: query
        name: registration_backend
        schema:
          enum:
          - zgw-create-zaak
          - email
          - stuf-zds-create-zaak
          - objects_api
          - microsoft-graph
          - camunda
          type: string
          title: Registration backend ID
          minLength: 1
        description: |-
          The ID of the registration backend to use.

          * `zgw-create-zaak` - ZGW API's
          * `email` - Email registration
          * `stuf-zds-create-zaak` - StUF-ZDS
          * `objects_api` - Objects API registration
          * `microsoft-graph` - Microsoft Graph (OneDrive/SharePoint)
          * `camunda` - Camunda
      - in: query
        name: zgw_api_group
        schema:
          type: integer
          title: ZGW API set
        description: The primary key of the ZGW API set to use. If provided, the informatieobjecttypen
          from the Catalogi API in this set will be returned. Otherwise, the Catalogi
          API in the default ZGW API set will be used to find informatieobjecttypen.
      tags:
      - registration
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InformatieObjectTypeChoice'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/registration/plugins:
    get:
      operationId: registration_plugins_list
      description: |-
        List all available registration plugins.

        Registration plugins are responsible for the implementation details to register the form submission
        with various backends, such as "API's voor zaakgericht werken", StUF-ZDS and others.
      summary: List available registration plugins
      tags:
      - registration
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistrationPlugin'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/registration/plugins/camunda/process-definitions:
    get:
      operationId: registration_plugins_camunda_process_definitions_list
      description: List the available process definitions & their versions.
      summary: List available Camunda process definitions
      tags:
      - registration
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessDefinition'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/registration/plugins/objects-api/object-types:
    get:
      operationId: registration_plugins_objects_api_object_types_list
      description: |-
        List the available Objecttypes.

        Note that the response data is essentially proxied from the configured Objecttypes API.
      tags:
      - registration
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Objecttype'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/registration/plugins/objects-api/object-types/{submission_uuid}/versions:
    get:
      operationId: registration_plugins_objects_api_object_types_versions_list
      description: |-
        List the available versions for an Objecttype.

        Note that the response data is essentially proxied from the configured Objecttypes API.
      parameters:
      - in: path
        name: submission_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - registration
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjecttypeVersion'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/service-fetch-configurations:
    get:
      operationId: service_fetch_configurations_list
      description: |-
        Return a list of available services fetch configurations configured in the backend.

        Note that this endpoint is **EXPERIMENTAL**.
      summary: List available service fetch configurations
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - service-fetch-configurations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceFetchConfigurationList'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
      x-experimental: true
  /api/v2/service-fetch-configurations/{id}:
    get:
      operationId: service_fetch_configurations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service fetch configuration.
        required: true
      tags:
      - service-fetch-configurations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFetchConfiguration'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
      x-experimental: true
  /api/v2/services:
    get:
      operationId: services_list
      description: |-
        Return a list of available (JSON) services/registrations configured in the backend.

        Note that this endpoint is **EXPERIMENTAL**.
      summary: List available services
      tags:
      - services
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
      x-experimental: true
  /api/v2/services/{id}:
    get:
      operationId: services_retrieve
      description: Configured Services
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
      x-experimental: true
  /api/v2/submissions:
    get:
      operationId: submissions_list
      description: Active submissions are submissions whose ID is in the user session.
        This endpoint returns user-bound submissions. Note that you get different
        results on different results because of the differing sessions.
      summary: List active submissions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - submissions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionList'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    post:
      operationId: submissions_create
      description: Start a submission for a particular form. The submission is added
        to the user session.
      summary: Start a submission
      tags:
      - submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Submission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
      parameters:
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
  /api/v2/submissions/{report_id}/{token}/download:
    get:
      operationId: submissions_download_retrieve
      description: Download het document met de ingezonden gegevens, in PDF vorm.
        Dit document kan alleen worden opgevraagd indien het juiste token is meegegeven,
        die hoort bij de formulier sessie. Het token vervalt automatisch na 1 dag(en).
      summary: Download the PDF report
      parameters:
      - in: path
        name: report_id
        schema:
          type: integer
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - submissions
      responses:
        '200':
          content:
            application/pdf:
              schema:
                type: string
                format: binary
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{submission_uuid}/steps/{step_uuid}:
    get:
      operationId: submissions_steps_retrieve
      description: The details of a particular submission step always return the related
        form step configuration. If there is no data yet for the step, the ID will
        be `null`. Set the step data by making a `PUT` request.
      summary: Retrieve step details
      parameters:
      - in: path
        name: step_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: submission_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - submissions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    put:
      operationId: submissions_steps_update
      description: |-
        The submission data is either created or updated, depending on whether there was
        submission data present before or not. Make sure to retrieve the step data to
        display already filled out fields.

        Note that the form step configuration is currently not validated - this may change
        in the future. I.e. - a step that is marked as not available will still be submitted
        at the time being.
      summary: Store submission step data
      parameters:
      - in: path
        name: step_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: submission_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionStep'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStep'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{submission_uuid}/steps/{step_uuid}/_check_logic:
    post:
      operationId: submissions_steps__check_logic_create
      description: Apply/check the logic rules specified on the form step.
      summary: Apply/check form logic
      parameters:
      - in: path
        name: step_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: submission_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormData'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionStateLogic'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{submission_uuid}/steps/{step_uuid}/validate:
    post:
      operationId: submissions_steps_validate_create
      description: |-
        Validate the submission step data before persisting.

        This endpoint runs the same validation logic as the PUT endpoint to store the
        data. For invalid data, you will get an HTTP 400 response with error details.
      summary: Store submission step data
      parameters:
      - in: path
        name: step_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: submission_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionStep'
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{uuid}:
    get:
      operationId: submissions_retrieve
      description: Get the state of a single submission in the user session.
      summary: Retrieve submission details
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - submissions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{uuid}/{token}/status:
    get:
      operationId: submissions_status_retrieve
      description: |-
        Obtain the current submission processing status, after completing it.

        The submission is processed asynchronously. Poll this endpoint to receive
        information on the status of this async processing.
      summary: Get the submission processing status
      parameters:
      - in: path
        name: token
        schema:
          type: string
        description: Time-based authentication token
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - submissions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionProcessingStatus'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{uuid}/_complete:
    post:
      operationId: submissions__complete_create
      description: |-
        Mark the submission as completed.

        Submission completion requires that all required steps are completed.

        Note that the processing of the submission runs in the background, and you
        should periodically check the submission status endpoint to check the state.
        Background processing makes sure that:

        * potential appointments are registered
        * a report PDF is generated
        * the submission is persisted to the configured backend
        * payment is initiated if relevant

        Once a submission is completed, it's removed from the submission and time-stamped
        HMAC token URLs are used for subsequent process flow. This means it's no longer
        possible to change or read the submission data (including individual steps).
        This guarantees that the submission is removed from the session without having
        to rely on the client being able to make another call. IF it is detected in the
        status endpoint that a retry is needed, the ID is added back to the session.

        ---
        **Warning**

        The schema of the validation errors response is currently marked as
        experimental. See our versioning policy in the developer documentation for
        what this means.
        ---
      summary: Complete a submission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Submission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionCompletion'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionValidation'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{uuid}/_suspend:
    post:
      operationId: submissions__suspend_create
      description: |-
        Suspend the submission.

        Submission suspension requires contact details to send the end-user a URL to
        resume the submission (possibly from another device).
      summary: Suspend a submission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionSuspension'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionSuspension'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionSuspension'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionSuspension'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{uuid}/co-sign:
    get:
      operationId: submissions_co_sign_retrieve
      description: Retrieve co-sign state.
      summary: Retrieve co-sign state
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - submissions
      security:
      - cookieAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionCoSignStatus'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{uuid}/cosign:
    post:
      operationId: submissions_cosign_create
      description: Call filter_queryset method of the permission class, if it exists.
      summary: Co-sign submission
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - submissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Submission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionReportUrl'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/{uuid}/summary:
    get:
      operationId: submissions_summary_list
      description: Retrieve the data to display in the submission summary page.
      summary: Summary page data
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - submissions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmissionStepSummarySerialzier'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/submissions/files/{uuid}:
    get:
      operationId: submissions_files_retrieve
      description: |-
        Haal tijdelijk bestand op.

        Deze aanroep wordt gedaan door het standaard Form.io bestandsupload widget.

        Toegang tot dit endpoint vereist een actieve formulier inzending. Niet gekoppelde bestanden worden automatisch verwijderd na 2 dag(en)
      summary: Retrieve temporary file upload
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - octet
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - submissions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
    delete:
      operationId: submissions_files_destroy
      description: "Delete temporary file upload by the uploader. \n\nThis is called\
        \ by the default Form.io file upload widget. \n\nAccess to this view requires\
        \ an active form submission. Unclaimed temporary files automatically expire\
        \ after {expire_days} day(s). "
      summary: Delete temporary file upload
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - octet
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: header
        name: X-CSRFToken
        schema:
          type: string
        required: true
      tags:
      - submissions
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        4XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        5XX:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/themes:
    get:
      operationId: themes_list
      description: |-
        Obtain information about the configured themes.

        A theme is a collection of styling/appearance related configuration. Themes are
        configured and managed in the admin interface.

        When designing forms, you can optionally specify which theme to use for that
        particular form.

        You must have staff permissions to be able to use the theme endpoints.
      summary: List available themes
      tags:
      - themes
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Theme'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/themes/{uuid}:
    get:
      operationId: themes_retrieve
      description: |-
        Obtain information about the configured themes.

        A theme is a collection of styling/appearance related configuration. Themes are
        configured and managed in the admin interface.

        When designing forms, you can optionally specify which theme to use for that
        particular form.

        You must have staff permissions to be able to use the theme endpoints.
      summary: Retrieve theme details
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - themes
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/translations/formio:
    get:
      operationId: translations_formio_retrieve
      description: Retrieve the translations for the strings used by FormIO
      summary: Get FormIO translations
      tags:
      - translations
      security:
      - {}
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  nl:
                    type: object
                    additionalProperties:
                      type: string
                required:
                - nl
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/validation/plugins:
    get:
      operationId: validation_plugins_list
      description: List available validation plugins that have been registered.
      summary: List available validation plugins
      parameters:
      - in: query
        name: componentType
        schema:
          type: string
        description: Only return validators applicable for the specified component
          type.
      tags:
      - validation
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationPlugin'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/validation/plugins/{validator}:
    post:
      operationId: validation_run
      description: Validate a value using given validator
      summary: Validate value using validation plugin
      parameters:
      - in: path
        name: validator
        schema:
          type: string
          enum:
          - brk-zakelijk-gerechtigd
          - kvk-branchNumber
          - kvk-kvkNumber
          - kvk-rsin
          - phonenumber-international
          - phonenumber-nl
        description: ID of the validation plugin, see the [`validation_plugin_list`](./#operation/validation_plugin_list)
          operation
        required: true
      tags:
      - validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidationInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidationInput'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /api/v2/variables/static:
    get:
      operationId: variables_static_list
      description: List the static data that will be associated with every form
      summary: Get static data
      tags:
      - variables
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormVariable'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /auth/{slug}/{plugin_id}/return:
    get:
      operationId: auth_return_retrieve
      description: |-
        Authentication plugins call this endpoint in the return step of the authentication flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.

        Typically authentication plugins will redirect again to the URL where the SDK is embedded.

        Various validations are performed:
        * the form must be live
        * the `plugin_id` is configured on the form
        * logging in is required on the form
        * the redirect target must match the CORS policy
      summary: Return from external login flow
      parameters:
      - in: query
        name: coSignSubmission
        schema:
          type: string
          format: uuid
        description: UUID of the submission for which this co-sign authentication
          applies. Presence of this parameter marks a flow as a co-sign flow.
      - in: path
        name: plugin_id
        schema:
          type: string
        description: Identifier of the authentication plugin.
        required: true
      - in: path
        name: slug
        schema:
          type: string
        description: Slug identifiying the form.
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '302':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL where the SDK initiated the authentication flow.
              required: true
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          description: No response body
        '400':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            text/html:
              schema:
                type: string
          description: Bad request. Invalid parameters were passed.
        '404':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            text/html:
              schema:
                type: string
          description: Not found. The slug did not point to a live form.
        '405':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            text/html:
              schema:
                type: string
          description: Method not allowed. The authentication plugin requires `POST`
            or `GET`, and the wrong method was used.
    post:
      operationId: auth_return_create
      description: |-
        Authentication plugins call this endpoint in the return step of the authentication flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.

        Typically authentication plugins will redirect again to the URL where the SDK is embedded.

        Various validations are performed:
        * the form must be live
        * the `plugin_id` is configured on the form
        * logging in is required on the form
        * the redirect target must match the CORS policy
      summary: Return from external login flow
      parameters:
      - in: query
        name: coSignSubmission
        schema:
          type: string
          format: uuid
        description: UUID of the submission for which this co-sign authentication
          applies. Presence of this parameter marks a flow as a co-sign flow.
      - in: path
        name: plugin_id
        schema:
          type: string
        description: Identifier of the authentication plugin.
        required: true
      - in: path
        name: slug
        schema:
          type: string
        description: Slug identifiying the form.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            text/html:
              schema:
                type: string
          description: OK. Possibly a form with validation errors is rendered.
        '302':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL where the SDK initiated the authentication flow.
              required: true
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          description: No response body
        '400':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            text/html:
              schema:
                type: string
          description: Bad request. Invalid parameters were passed.
        '404':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            text/html:
              schema:
                type: string
          description: Not found. The slug did not point to a live form.
        '405':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            text/html:
              schema:
                type: string
          description: Method not allowed. The authentication plugin requires `POST`
            or `GET`, and the wrong method was used.
  /auth/{slug}/{plugin_id}/start:
    get:
      operationId: auth_start_retrieve
      description: |-
        This endpoint is the internal redirect target to start external login flow.

        Note that this is NOT a JSON 'endpoint', but rather the browser should be redirected to this URL and will in turn receive another redirect.

        Various validations are performed:
        * the form must be live
        * the `plugin_id` is configured on the form
        * logging in is required on the form
        * the `next` parameter must be present
        * the `next` parameter must match the CORS policy
      summary: Start authentication flow
      parameters:
      - in: query
        name: coSignSubmission
        schema:
          type: string
          format: uuid
        description: UUID of the submission for which this co-sign authentication
          applies. Presence of this parameter marks a flow as a co-sign flow.
      - in: query
        name: next
        schema:
          type: string
          format: uri
        description: URL of the form to redirect back to. This URL is validated against
          the CORS configuration.
        required: true
      - in: path
        name: plugin_id
        schema:
          type: string
        description: Identifier of the authentication plugin. Note that this is validated
          against the configured available plugins for this particular form.
        required: true
      - in: path
        name: slug
        schema:
          type: string
        description: Slug identifiying the form.
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: OK. A login page is rendered.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '302':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL of the external authentication service where the end-user
                will be redirected to. The value is specific to the selected authentication
                plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          description: No response body
        '400':
          content:
            text/html:
              schema:
                type: string
          description: Bad request. Invalid parameters were passed.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            text/html:
              schema:
                type: string
          description: Not found. The slug did not point to a live form.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /payment/{plugin_id}/webhook:
    get:
      operationId: payment_webhook_retrieve
      description: |-
        This endpoint is used for server-to-server calls. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.

        Various validations are performed:
        * the `plugin_id` is configured on the form
        * payment is required and configured on the form
      summary: Webhook handler for external payment flow
      parameters:
      - in: path
        name: plugin_id
        schema:
          type: string
        description: Identifier of the payment plugin. Note that this is validated
          against the configured available plugins for this particular form.
        required: true
      tags:
      - payment
      security:
      - {}
      responses:
        '200':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          description: No response body
        '400':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Bad request. Invalid parameters were passed.
        '404':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Not found. The slug did not point to a live plugin.
    post:
      operationId: payment_webhook_create
      description: |-
        This endpoint is used for server-to-server calls. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.

        Various validations are performed:
        * the `plugin_id` is configured on the form
        * payment is required and configured on the form
      summary: Webhook handler for external payment flow
      parameters:
      - in: path
        name: plugin_id
        schema:
          type: string
        description: Identifier of the payment plugin. Note that this is validated
          against the configured available plugins for this particular form.
        required: true
      tags:
      - payment
      security:
      - {}
      responses:
        '200':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          description: No response body
        '400':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Bad request. Invalid parameters were passed.
        '404':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Not found. The slug did not point to a live plugin.
  /payment/{uuid}/{plugin_id}/start:
    post:
      operationId: payment_start_create
      description: |-
        This endpoint provides information to start the payment flow for a submission.

        Due to support for legacy platforms this view doesn't redirect but provides information for the frontend to be used client side.

        Various validations are performed:
        * the form and submission must require payment
        * the `plugin_id` is configured on the form
        * payment is required and configured on the form
        * the `next` parameter must be present
        * the `next` parameter must match the CORS policy

        The HTTP 200 response contains the information to start the flow with the payment provider. Depending on the 'type', send a `GET` or `POST` request with the `data` as 'Form Data' to the given 'url'.
      summary: Start payment flow
      parameters:
      - in: query
        name: next
        schema:
          type: string
          format: uri
        description: URL of the form to redirect back to. This URL is validated against
          the CORS configuration.
        required: true
      - in: path
        name: plugin_id
        schema:
          type: string
        description: Identifier of the payment plugin. Note that this is validated
          against the configured available plugins for this particular form.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
        description: UUID identifying the submission.
        required: true
      tags:
      - payment
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfo'
          description: ''
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '400':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Bad request. Invalid parameters were passed.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
        '404':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Not found. The slug did not point to a live submission or the
            `plugin_id` does not exist.
          headers:
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
  /payment/{uuid}/return:
    get:
      operationId: payment_return_retrieve
      description: |-
        Payment plugins call this endpoint in the return step of the payment flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.

        Typically payment plugins will redirect again to the URL where the SDK is embedded.

        Various validations are performed:
        * the form and submission must require payment
        * the `plugin_id` is configured on the form
        * payment is required and configured on the form
        * the redirect target must match the CORS policy
      summary: Return from external payment flow
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        description: UUID identifying the payment.
        required: true
      tags:
      - payment
      security:
      - {}
      responses:
        '302':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL where the SDK initiated the payment flow.
              required: true
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          description: Tempomrary redirect
        '400':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Bad request. Invalid parameters were passed.
        '404':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Not found. The slug did not point to a live submission payment
            or the `plugin_id` does not exist.
    post:
      operationId: payment_return_create
      description: |-
        Payment plugins call this endpoint in the return step of the payment flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.

        Typically payment plugins will redirect again to the URL where the SDK is embedded.

        Various validations are performed:
        * the form and submission must require payment
        * the `plugin_id` is configured on the form
        * payment is required and configured on the form
        * the redirect target must match the CORS policy
      summary: Return from external payment flow
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        description: UUID identifying the payment.
        required: true
      tags:
      - payment
      security:
      - {}
      responses:
        '302':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL where the SDK initiated the payment flow.
              required: true
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          description: Tempomrary redirect
        '400':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Bad request. Invalid parameters were passed.
        '404':
          headers:
            Allow:
              schema:
                type: string
              description: Allowed HTTP method(s) for this plugin.
              required: true
            X-Session-Expires-In:
              $ref: '#/components/headers/X-Session-Expires-In'
            X-CSRFToken:
              $ref: '#/components/headers/X-CSRFToken'
            X-Is-Form-Designer:
              $ref: '#/components/headers/X-Is-Form-Designer'
            Content-Language:
              $ref: '#/components/headers/Content-Language'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Exception'
          description: Not found. The slug did not point to a live submission payment
            or the `plugin_id` does not exist.
components:
  headers:
    Content-Language:
      schema:
        type: string
        enum:
        - en
        - nl
      description: Language code of the currently activated language.
      required: true
    X-CSRFToken:
      schema:
        type: string
      description: CSRF Token
      required: true
    X-Is-Form-Designer:
      schema:
        type: string
      description: If true, the user is allowed to navigate between submission steps
        even if previous submission steps have not been completed yet.
    X-Session-Expires-In:
      schema:
        type: string
      description: Amount of time in seconds after which the session expires. After
        this time has passed, the session is expired and the user is 'logged out'.
        Note that every subsequent API call resets the expiry.
      required: true
  schemas:
    AddressSearchResult:
      type: object
      properties:
        label:
          type: string
          title: Location name
        latLng:
          allOf:
          - $ref: '#/components/schemas/LatitudeLongitude'
          title: Latitude/longitude
          description: Latitude and longitude in the WGS 84 coordinate system.
        rd:
          allOf:
          - $ref: '#/components/schemas/RijksDriehoek'
          nullable: true
          title: Rijkdsdriehoek coordinates
          description: X and Y coordinates in the [Rijkdsdriehoek](https://nl.wikipedia.org/wiki/Rijksdriehoeksco%C3%B6rdinaten)
            coordinate system.
      required:
      - label
      - latLng
      - rd
    AnalyticsToolsConfig:
      type: object
      properties:
        govmetricSourceId:
          type: string
          description: Your GovMetric source ID - This is created by KLANTINFOCUS
            when a list of questions is created. It is a numerical value that is unique
            per set of questions.
          maxLength: 10
        govmetricSecureGuid:
          type: string
          description: Your GovMetric secure GUID - This is an optional value. It
            is created by KLANTINFOCUS when a list of questions is created. It is
            a string that is unique per set of questions.
          maxLength: 50
        enableGovmetricAnalytics:
          type: boolean
          description: This enables GovMetric to collect data while a user fills in
            a form and it adds a button at the end of a form to fill in a client satisfaction
            survey.
    ApiTypeEnum:
      enum:
      - ac
      - nrc
      - zrc
      - ztc
      - drc
      - brc
      - cmc
      - kc
      - vrc
      - orc
      type: string
      description: |-
        * `ac` - AC (Authorizations)
        * `nrc` - NRC (Notifications)
        * `zrc` - ZRC (Zaken)
        * `ztc` - ZTC (Zaaktypen)
        * `drc` - DRC (Informatieobjecten)
        * `brc` - BRC (Besluiten)
        * `cmc` - Contactmomenten API
        * `kc` - Klanten API
        * `vrc` - Verzoeken API
        * `orc` - ORC (Overige)
    AppearanceEnum:
      enum:
      - dark
      - light
      type: string
      description: |-
        * `dark` - Dark
        * `light` - Light
    Appointment:
      type: object
      properties:
        submission:
          type: string
          format: uri
          description: The submission that made the appointment
        products:
          type: array
          items:
            $ref: '#/components/schemas/_AppointmentProduct'
        location:
          type: string
          title: Location ID
          description: Identifier of the location in the selected plugin.
          maxLength: 128
        date:
          type: string
          format: date
        datetime:
          type: string
          format: date-time
          title: Appointment time
          description: Date and time of the appointment
        contactDetails:
          type: object
          additionalProperties: {}
          description: Additional contact detail field values.
        privacyPolicyAccepted:
          type: boolean
          writeOnly: true
        statusUrl:
          type: string
          format: uri
          readOnly: true
          title: status check endpoint
          description: The API endpoint where the background processing status can
            be checked. After calling the completion endpoint, this status URL should
            be polled to report the processing status back to the end-user. Note that
            the endpoint contains a token which invalidates on state changes and after
            one day.
      required:
      - contactDetails
      - date
      - datetime
      - location
      - privacyPolicyAccepted
      - products
      - statusUrl
      - submission
    AppointmentOptions:
      type: object
      properties:
        isAppointment:
          type: boolean
          title: Is appointment form
          description: Boolean indicating if the form is an appointment form, using
            the new flow.
        supportsMultipleProducts:
          type: boolean
          nullable: true
          readOnly: true
          title: Multiple products supported?
          description: If not supported, only one product/service can be booked at
            once and the UI may not allow the user to select multiple products.
      required:
      - isAppointment
      - supportsMultipleProducts
    AppointmentProduct:
      type: object
      properties:
        code:
          type: string
          description: Product code
        identifier:
          type: string
          description: ID of the product
        name:
          type: string
          description: Product name
      required:
      - code
      - identifier
      - name
    AuthPlugin:
      type: object
      properties:
        id:
          type: string
          description: The unique plugin identifier
        label:
          type: string
          description: The human-readable name for a plugin.
        providesAuth:
          type: string
          title: Provides authentication attributes
          description: The authentication attribute provided by this plugin.
        assuranceLevels:
          type: array
          items:
            $ref: '#/components/schemas/TextChoice'
          title: Levels of assurance
          description: The levels of assurance this plugin defines.
      required:
      - assuranceLevels
      - id
      - label
      - providesAuth
    AuthenticationBackendsEnum:
      enum:
      - digid
      - eherkenning
      - eidas
      - digid_oidc
      - eherkenning_oidc
      - digid_machtigen_oidc
      - eherkenning_bewindvoering_oidc
      - org-oidc
      type: string
      description: |-
        * `digid` - DigiD
        * `eherkenning` - eHerkenning
        * `eidas` - eIDAS
        * `digid_oidc` - DigiD
        * `eherkenning_oidc` - eHerkenning
        * `digid_machtigen_oidc` - DigiD Machtigen
        * `eherkenning_bewindvoering_oidc` - eHerkenning bewindvoering
        * `org-oidc` - OpenID Connect
    AvailableLanguagesEnum:
      enum:
      - nl
      - en
      type: string
      description: |-
        * `nl` - Dutch
        * `en` - English
    BRPPersonenRequestOptions:
      type: object
      properties:
        brpPersonenPurposeLimitationHeaderValue:
          type: string
          description: The purpose limitation ("doelbinding") for queries to the BRP
            Persoon API.
          maxLength: 255
        brpPersonenProcessingHeaderValue:
          type: string
          description: The processing ("verwerking") for queries to the BRP Persoon
            API.
          maxLength: 242
    BlankEnum:
      enum:
      - ''
    ButtonText:
      type: object
      properties:
        resolved:
          type: string
          readOnly: true
        value:
          type: string
      required:
      - resolved
      - value
    CancelAppointmentInput:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email given when making the appointment
      required:
      - email
    CatalogusDomain:
      type: object
      properties:
        domein:
          type: string
      required:
      - domein
    Category:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: Human readable name
          maxLength: 64
        uuid:
          type: string
          format: uuid
        ancestors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              uuid:
                type: string
            required:
            - name
            - uuid
          readOnly: true
      required:
      - ancestors
      - name
      - url
    CompletionValidation:
      type: object
      properties:
        incompleteSteps:
          type: array
          items:
            type: string
          maxItems: 0
        submissionAllowed:
          $ref: '#/components/schemas/SubmissionAllowedEnum'
        privacyPolicyAccepted:
          type: boolean
        statementOfTruthAccepted:
          type: boolean
        containsBlockedSteps:
          type: boolean
      required:
      - containsBlockedSteps
      - incompleteSteps
      - privacyPolicyAccepted
      - statementOfTruthAccepted
      - submissionAllowed
      x-experimental: true
    ComponentProperty:
      type: object
      properties:
        value:
          type: string
          title: property key
          description: The Form.io component property to alter, identified by `component.key`
        type:
          allOf:
          - $ref: '#/components/schemas/ComponentPropertyTypeEnum'
          description: |-
            The type of the value field

            * `bool` - Boolean
            * `json` - JSON
      required:
      - type
      - value
    ComponentPropertyTypeEnum:
      enum:
      - bool
      - json
      type: string
      description: |-
        * `bool` - Boolean
        * `json` - JSON
    ComponentTranslations:
      type: object
      description: |-
        Nest translations for literals used in the FormIO configuration inside the serializer.

        This serializer produces a similar structure as the `translations` for model fields,
        except that the literals are dependent on the literals used in the components defined
        in the FormIO configuration.

        Literals are mapped to their translation, e.g. a configuration with a `TextField`
        with default label `Text field` and `FileField` with default label `File field`
        could look as follows:

            ParentModelSerializer:
                ... other fields/serializers

                ComponentTranslationsSerializer:
                    nl:
                        "Text field": "Tekstveld"
                        "File field": "Uploadveld"
                    en:
                        "Text field": "Text field"
                        "File field": "File field"
      properties:
        nl:
          type: object
          additionalProperties:
            type: string
        en:
          type: object
          additionalProperties:
            type: string
    ConfirmationEmailTemplate:
      type: object
      properties:
        subject:
          type: string
          description: Subject of the email message
          maxLength: 1000
        content:
          type: string
          description: The content of the email message can contain variables that
            will be templated from the submitted form data.
        translations:
          $ref: '#/components/schemas/ConfirmationEmailTemplateModelTranslations'
    ConfirmationEmailTemplateENTranslations:
      type: object
      properties:
        subject:
          type: string
          nullable: true
          title: Subject [en]
          description: Subject of the email message
          maxLength: 1000
        content:
          type: string
          nullable: true
          title: Content [en]
          description: The content of the email message can contain variables that
            will be templated from the submitted form data.
    ConfirmationEmailTemplateModelTranslations:
      type: object
      description: |-
        Nest a model's translatable fields inside the serializer.

        This serializer takes the structure of the parent serializer it's included in
        and analyzes the model it belongs to to extract the translatable fields. The parent
        serializer is stripped down for only the translatable fields and assigned to the
        language-specific model fields, while keeping parent serializer validation logic/
        definitions.

        This stripped down serializer is applied for every language code in
        settings.LANGUAGES. Effectively, this results in a structure like:

            ParentModelSerializer:
                ... other fields/serializers

                ModelTranslationsSerializer:
                    nl:
                        StrippedParentModelSerializer (nl)
                    en:
                        StrippedParentModelSerializer (en)
      properties:
        nl:
          allOf:
          - $ref: '#/components/schemas/ConfirmationEmailTemplateNLTranslations'
          description: 'Content translations for: Dutch'
        en:
          allOf:
          - $ref: '#/components/schemas/ConfirmationEmailTemplateENTranslations'
          description: 'Content translations for: English'
    ConfirmationEmailTemplateNLTranslations:
      type: object
      properties:
        subject:
          type: string
          nullable: true
          title: Subject [nl]
          description: Subject of the email message
          maxLength: 1000
        content:
          type: string
          nullable: true
          title: Content [nl]
          description: The content of the email message can contain variables that
            will be templated from the submitted form data.
    ContextAwareFormStep:
      type: object
      properties:
        index:
          type: integer
          readOnly: true
        configuration:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - configuration
      - index
    CosignLoginInfo:
      type: object
      properties:
        identifier:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
          title: Button label
          description: Button label
        url:
          type: string
          format: uri
          readOnly: true
          title: Login URL
          description: URL to start login flow, expects 'next' GET-parameter with
            return url
        logo:
          allOf:
          - $ref: '#/components/schemas/LoginLogo'
          readOnly: true
          title: Optional logo
          description: Optional logo
        isForGemachtigde:
          type: boolean
          readOnly: true
          description: This authorization method can be used to log in on behalf of
            another person or company
      required:
      - identifier
      - isForGemachtigde
      - label
      - logo
      - url
    DMNEvaluateAction:
      type: object
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/DMNEvaluateActionConfig'
          title: Configuration
      required:
      - config
    DMNEvaluateActionConfig:
      type: object
      properties:
        pluginId:
          type: string
        decisionDefinitionId:
          type: string
        decisionDefinitionVersion:
          type: string
          default: ''
        inputMapping:
          type: array
          items:
            $ref: '#/components/schemas/VariableMapping'
        outputMapping:
          type: array
          items:
            $ref: '#/components/schemas/VariableMapping'
      required:
      - decisionDefinitionId
      - inputMapping
      - outputMapping
      - pluginId
    DataMappingTypeEnum:
      enum:
      - JsonLogic
      - jq
      type: string
      description: |-
        * `JsonLogic` - JsonLogic
        * `jq` - jq
    DataTypeEnum:
      enum:
      - string
      - boolean
      - object
      - array
      - int
      - float
      - datetime
      - time
      - date
      type: string
      description: |-
        * `string` - String
        * `boolean` - Boolean
        * `object` - Object
        * `array` - Array
        * `int` - Integer
        * `float` - Float
        * `datetime` - Datetime
        * `time` - Time
        * `date` - Date
    Date:
      type: object
      properties:
        date:
          type: string
          format: date
      required:
      - date
    DecisionDefinition:
      type: object
      properties:
        id:
          type: string
          title: Identifier
          description: The (unique) identifier pointing to a particular decision definition.
        label:
          type: string
          description: Human readable name/label identifying the decision definition.
      required:
      - id
      - label
    DecisionDefinitionVersion:
      type: object
      properties:
        id:
          type: string
          title: version identifier
          description: The (unique) identifier pointing to a particular decision definition
            version.
        label:
          type: string
          description: Textual representation of the definition version.
      required:
      - id
      - label
    DecisionDefinitionXML:
      type: object
      properties:
        xml:
          type: string
          title: DMN XML
          description: If no XML can be obtained, the value will be an empty string.
      required:
      - xml
    DecisionPlugin:
      type: object
      properties:
        id:
          type: string
          description: The unique plugin identifier
        label:
          type: string
          description: The human-readable name for a plugin.
      required:
      - id
      - label
    DisplayEnum:
      enum:
      - form
      type: string
      description: '* `form` - form'
    Exception:
      type: object
      description: |-
        Error format for HTTP 4xx and 5xx errors.

        See https://docs.geostandaarden.nl/api/API-Strategie-ext/#error-handling-0 for the NL API strategy guidelines.
      properties:
        type:
          type: string
          description: URI reference to the error type, intended for developers
        code:
          type: string
          description: System code indicating the type of error
        title:
          type: string
          description: Generic title for the type of error
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: Extra information about the error, if available
        instance:
          type: string
          description: URI with reference to this specific occurrence of the error.
            This can be used in conjunction with server logs, for example.
      required:
      - code
      - detail
      - instance
      - status
      - title
    FieldValidationError:
      type: object
      description: |-
        Validation error format, following the NL API Strategy.

        See https://docs.geostandaarden.nl/api/API-Strategie/ and
        https://docs.geostandaarden.nl/api/API-Strategie-ext/#error-handling-0
      properties:
        name:
          type: string
          description: Name of the field with invalid data
        code:
          type: string
          description: System code of the type of error
        reason:
          type: string
          description: Explanation of what went wrong with the data
      required:
      - code
      - name
      - reason
    Form:
      type: object
      description: |-
        Represent a single `Form` definition.

        Contains all the relevant metadata and configuration from the form design. Form
        renderers should use this as starting point.

        Note that this schema is used for both non-admin users filling out forms and
        admin users designing forms. The fields that are only relevant for admin users are:
        `internalName`, `registrationBackends`, `registrationBackend`, `registrationBackendOptions`, `authenticationBackendOptions`, `paymentBackend`, `paymentBackendOptions`, `product`, `category`, `theme`, `activateOn`, `deactivateOn`, `isDeleted`, `submissionConfirmationTemplate`, `askPrivacyConsent`, `askStatementOfTruth`, `submissionsRemovalOptions`, `confirmationEmailTemplate`, `sendConfirmationEmail`, `displayMainWebsiteLink`, `includeConfirmationPageContentInPdf`, `translations`, `brpPersonenRequestOptions`.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        internalName:
          type: string
          description: internal name for management purposes
          maxLength: 150
        loginRequired:
          type: boolean
          readOnly: true
        translationEnabled:
          type: boolean
        registrationBackends:
          type: array
          items:
            $ref: '#/components/schemas/FormRegistrationBackend'
        registrationBackend:
          type: string
          deprecated: true
        registrationBackendOptions:
          nullable: true
          deprecated: true
        authenticationBackends:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationBackendsEnum'
          writeOnly: true
        authenticationBackendOptions:
          type: object
          additionalProperties: {}
        loginOptions:
          type: array
          items:
            $ref: '#/components/schemas/LoginOption'
          readOnly: true
        autoLoginAuthenticationBackend:
          type: string
          description: The authentication backend to which the user will be automatically
            redirected upon starting the form. The chosen backend must be present
            in `authentication_backends`
        paymentRequired:
          type: boolean
          readOnly: true
        paymentBackend:
          default: ''
          oneOf:
          - $ref: '#/components/schemas/PaymentBackendEnum'
          - $ref: '#/components/schemas/BlankEnum'
        paymentBackendOptions:
          type: object
          additionalProperties: {}
          nullable: true
        paymentOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentOption'
          readOnly: true
        appointmentOptions:
          allOf:
          - $ref: '#/components/schemas/AppointmentOptions'
          nullable: true
        literals:
          $ref: '#/components/schemas/FormLiterals'
        product:
          type: string
          format: uri
          nullable: true
          description: URL to the product in the Open Forms API
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        url:
          type: string
          format: uri
          readOnly: true
        category:
          type: string
          format: uri
          nullable: true
          description: URL to the category in the Open Forms API
        theme:
          type: string
          format: uri
          nullable: true
          description: URL to the theme in the Open Forms API
        steps:
          type: array
          items:
            $ref: '#/components/schemas/MinimalFormStep'
          readOnly: true
        showProgressIndicator:
          type: boolean
          description: Whether the step progression should be displayed in the UI
            or not.
        maintenanceMode:
          type: boolean
          description: Users will not be able to start the form if it is in maintenance
            mode.
        active:
          type: boolean
        activateOn:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which the form should be activated.
        deactivateOn:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which the form should be deactivated.
        isDeleted:
          type: boolean
        submissionConfirmationTemplate:
          type: string
          description: The content of the submission confirmation page. It can contain
            variables that will be templated from the submitted form data. If not
            specified, the global template will be used.
        explanationTemplate:
          type: string
          description: Content that will be shown on the start page of the form, below
            the title and above the log in text.
        submissionAllowed:
          allOf:
          - $ref: '#/components/schemas/SubmissionAllowedEnum'
          description: |-
            Whether the user is allowed to submit this form or not, and whether the overview page should be shown if they are not.

            * `yes` - Yes
            * `no_with_overview` - No (with overview page)
            * `no_without_overview` - No (without overview page)
        suspensionAllowed:
          type: boolean
          description: Whether the user is allowed to suspend this form or not.
        askPrivacyConsent:
          allOf:
          - $ref: '#/components/schemas/StatementCheckboxEnum'
          description: |-
            If enabled, the user will have to agree to the privacy policy before submitting a form.

            * `global_setting` - Global setting
            * `required` - Required
            * `disabled` - Disabled
        askStatementOfTruth:
          allOf:
          - $ref: '#/components/schemas/StatementCheckboxEnum'
          description: |-
            If enabled, the user will have to agree that they filled out the form truthfully before submitting it.

            * `global_setting` - Global setting
            * `required` - Required
            * `disabled` - Disabled
        submissionsRemovalOptions:
          $ref: '#/components/schemas/SubmissionsRemovalOptions'
        confirmationEmailTemplate:
          allOf:
          - $ref: '#/components/schemas/ConfirmationEmailTemplate'
          nullable: true
        sendConfirmationEmail:
          type: boolean
          description: Whether a confirmation email should be sent to the end user
            filling in the form.
        displayMainWebsiteLink:
          type: boolean
          description: Display the link to the main website on the submission confirmation
            page.
        includeConfirmationPageContentInPdf:
          type: boolean
          description: Display the instruction from the confirmation page in the PDF.
        requiredFieldsWithAsterisk:
          type: boolean
          readOnly: true
        translations:
          $ref: '#/components/schemas/FormModelTranslations'
        resumeLinkLifetime:
          type: integer
          readOnly: true
          description: The number of days that the resume link is valid for.
        hideNonApplicableSteps:
          type: boolean
          readOnly: true
        cosignLoginOptions:
          type: array
          items:
            $ref: '#/components/schemas/LoginOption'
          readOnly: true
        cosignLoginInfo:
          allOf:
          - $ref: '#/components/schemas/CosignLoginInfo'
          readOnly: true
          deprecated: true
        submissionStatementsConfiguration:
          type: array
          items:
            type: object
            description: Eén enkel Form.io selectievakjecomponent voor de verklaring
              die een gebruiker mogelijks moet accepteren voor het formulier ingestuurd
              kan worden.
            properties:
              type:
                type: string
                description: Component type (checkbox)
              key:
                type: string
                description: Key of the statement field
              label:
                type: string
                description: Text of the statement
              validate:
                type: object
                properties:
                  required:
                    type: boolean
                    description: Whether accepting this statement is required or not.
            title: Statement checkbox
          readOnly: true
          description: A list of statements that need to be accepted by the user before
            they can submit a form. Returns a list of formio component definitions,
            all of type 'checkbox'.
        submissionReportDownloadLinkTitle:
          type: string
          readOnly: true
        brpPersonenRequestOptions:
          allOf:
          - $ref: '#/components/schemas/BRPPersonenRequestOptions'
          nullable: true
      required:
      - cosignLoginInfo
      - cosignLoginOptions
      - hideNonApplicableSteps
      - loginOptions
      - loginRequired
      - name
      - paymentOptions
      - paymentRequired
      - requiredFieldsWithAsterisk
      - resumeLinkLifetime
      - slug
      - steps
      - submissionReportDownloadLinkTitle
      - submissionStatementsConfiguration
      - url
      - uuid
    FormAdminMessage:
      type: object
      description: Collect metadata about which (success) message to send.
      properties:
        submitAction:
          allOf:
          - $ref: '#/components/schemas/SubmitActionEnum'
          description: |-
            Which submit action was clicked. This determines the success message todisplay.

            * `_save` - Save
            * `_addanother` - Save and add another
            * `_continue` - Save and continue editing
        isCreate:
          type: boolean
          description: Whether the submit action was a create operation or update.
        redirectUrl:
          type: string
          format: uri
          readOnly: true
          description: Where the UI should redirect the user to. The exact admin URL
            varies with the submit action.
      required:
      - isCreate
      - redirectUrl
      - submitAction
    FormData:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
          title: form data
          description: The Form.io submission data object. This will be merged with
            the full form submission data, including data from other steps, to evaluate
            the configured form logic.
    FormDefinition:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        uuid:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 50
        internalName:
          type: string
          description: internal name for management purposes
          maxLength: 50
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
          deprecated: true
        configuration:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionConfiguration'
          title: Form.io configuration
          description: The form definition as Form.io JSON schema
        loginRequired:
          type: boolean
          description: DigID Login required for form step
        isReusable:
          type: boolean
          description: Allow this definition to be re-used in multiple forms
        translations:
          $ref: '#/components/schemas/FormDefinitionModelTranslations'
        componentTranslations:
          allOf:
          - $ref: '#/components/schemas/ComponentTranslations'
          nullable: true
      required:
      - configuration
      - name
      - url
    FormDefinitionConfiguration:
      type: object
      properties:
        display:
          $ref: '#/components/schemas/DisplayEnum'
        components:
          type: array
          items: {}
    FormDefinitionDetail:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        uuid:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 50
        internalName:
          type: string
          description: internal name for management purposes
          maxLength: 50
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
          deprecated: true
        configuration:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionConfiguration'
          title: Form.io configuration
          description: The form definition as Form.io JSON schema
        loginRequired:
          type: boolean
          description: DigID Login required for form step
        isReusable:
          type: boolean
          description: Allow this definition to be re-used in multiple forms
        translations:
          $ref: '#/components/schemas/FormDefinitionDetailModelTranslations'
        componentTranslations:
          allOf:
          - $ref: '#/components/schemas/ComponentTranslations'
          nullable: true
        usedIn:
          type: array
          items:
            $ref: '#/components/schemas/UsedInForm'
          title: Used in forms
          description: The collection of forms making use of this definition. This
            includes both active and inactive forms.
      required:
      - configuration
      - name
      - url
      - usedIn
    FormDefinitionDetailENTranslations:
      type: object
      properties:
        name:
          type: string
          nullable: true
          title: Name [en]
          maxLength: 50
    FormDefinitionDetailModelTranslations:
      type: object
      description: |-
        Nest a model's translatable fields inside the serializer.

        This serializer takes the structure of the parent serializer it's included in
        and analyzes the model it belongs to to extract the translatable fields. The parent
        serializer is stripped down for only the translatable fields and assigned to the
        language-specific model fields, while keeping parent serializer validation logic/
        definitions.

        This stripped down serializer is applied for every language code in
        settings.LANGUAGES. Effectively, this results in a structure like:

            ParentModelSerializer:
                ... other fields/serializers

                ModelTranslationsSerializer:
                    nl:
                        StrippedParentModelSerializer (nl)
                    en:
                        StrippedParentModelSerializer (en)
      properties:
        nl:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionDetailNLTranslations'
          description: 'Content translations for: Dutch'
        en:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionDetailENTranslations'
          description: 'Content translations for: English'
    FormDefinitionDetailNLTranslations:
      type: object
      properties:
        name:
          type: string
          nullable: true
          title: Name [nl]
          maxLength: 50
    FormDefinitionENTranslations:
      type: object
      properties:
        name:
          type: string
          nullable: true
          title: Name [en]
          maxLength: 50
    FormDefinitionModelTranslations:
      type: object
      description: |-
        Nest a model's translatable fields inside the serializer.

        This serializer takes the structure of the parent serializer it's included in
        and analyzes the model it belongs to to extract the translatable fields. The parent
        serializer is stripped down for only the translatable fields and assigned to the
        language-specific model fields, while keeping parent serializer validation logic/
        definitions.

        This stripped down serializer is applied for every language code in
        settings.LANGUAGES. Effectively, this results in a structure like:

            ParentModelSerializer:
                ... other fields/serializers

                ModelTranslationsSerializer:
                    nl:
                        StrippedParentModelSerializer (nl)
                    en:
                        StrippedParentModelSerializer (en)
      properties:
        nl:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionNLTranslations'
          description: 'Content translations for: Dutch'
        en:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionENTranslations'
          description: 'Content translations for: English'
    FormDefinitionNLTranslations:
      type: object
      properties:
        name:
          type: string
          nullable: true
          title: Name [nl]
          maxLength: 50
    FormENTranslations:
      type: object
      description: |-
        Represent a single `Form` definition.

        Contains all the relevant metadata and configuration from the form design. Form
        renderers should use this as starting point.

        Note that this schema is used for both non-admin users filling out forms and
        admin users designing forms. The fields that are only relevant for admin users are:
        `internalName`, `registrationBackends`, `registrationBackend`, `registrationBackendOptions`, `authenticationBackendOptions`, `paymentBackend`, `paymentBackendOptions`, `product`, `category`, `theme`, `activateOn`, `deactivateOn`, `isDeleted`, `submissionConfirmationTemplate`, `askPrivacyConsent`, `askStatementOfTruth`, `submissionsRemovalOptions`, `confirmationEmailTemplate`, `sendConfirmationEmail`, `displayMainWebsiteLink`, `includeConfirmationPageContentInPdf`, `translations`, `brpPersonenRequestOptions`.
      properties:
        name:
          type: string
          nullable: true
          title: Name [en]
          maxLength: 150
        submissionConfirmationTemplate:
          type: string
          nullable: true
          title: Submission confirmation template [en]
          description: The content of the submission confirmation page. It can contain
            variables that will be templated from the submitted form data. If not
            specified, the global template will be used.
        beginText:
          type: string
          nullable: true
          title: Begin text [en]
          description: The text that will be displayed at the start of the form to
            indicate the user can begin to fill in the form. Leave blank to get value
            from global configuration.
          maxLength: 50
        previousText:
          type: string
          nullable: true
          title: Previous text [en]
          description: The text that will be displayed in the overview page to go
            to the previous step. Leave blank to get value from global configuration.
          maxLength: 50
        changeText:
          type: string
          nullable: true
          title: Change text [en]
          description: The text that will be displayed in the overview page to change
            a certain step. Leave blank to get value from global configuration.
          maxLength: 50
        confirmText:
          type: string
          nullable: true
          title: Confirm text [en]
          description: The text that will be displayed in the overview page to confirm
            the form is filled in correctly. Leave blank to get value from global
            configuration.
          maxLength: 50
        explanationTemplate:
          type: string
          nullable: true
          title: Explanation template [en]
          description: Content that will be shown on the start page of the form, below
            the title and above the log in text.
    FormImport:
      type: object
      properties:
        file:
          type: string
          format: uri
          description: The file that contains the form, form definitions and form
            steps.
      required:
      - file
    FormLiterals:
      type: object
      properties:
        previousText:
          $ref: '#/components/schemas/ButtonText'
        beginText:
          $ref: '#/components/schemas/ButtonText'
        changeText:
          $ref: '#/components/schemas/ButtonText'
        confirmText:
          $ref: '#/components/schemas/ButtonText'
    FormLogic:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        form:
          type: string
          format: uri
          description: Form to which the JSON logic applies.
        jsonLogicTrigger:
          title: JSON logic
          description: The trigger expression to determine if the actions should execute
            or not. Note that this must be a valid JsonLogic expression, and the first
            operand must be a reference to a variable in the form.
        description:
          type: string
          description: Logic rule description in natural language.
          maxLength: 100
        order:
          type: integer
          description: Order of the rule relative to the form it belongs to. Logic
            rules are evaluated in this order. Note that specifying a value for the
            order here will cause the rules before/after this rule to be re-calculated.
        triggerFromStep:
          type: string
          format: uri
          nullable: true
          description: When set, the trigger will only be checked once the specified
            step is reached. This means the rule will never trigger for steps before
            the specified trigger step. If unset, the trigger will always be checked.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/LogicComponentAction'
          description: Actions triggered when the trigger expression evaluates to
            'truthy'.
        isAdvanced:
          type: boolean
          description: Is this an advanced rule (the admin user manually wrote the
            trigger as JSON)?
      required:
      - actions
      - form
      - jsonLogicTrigger
      - order
      - url
      - uuid
    FormModelTranslations:
      type: object
      description: |-
        Nest a model's translatable fields inside the serializer.

        This serializer takes the structure of the parent serializer it's included in
        and analyzes the model it belongs to to extract the translatable fields. The parent
        serializer is stripped down for only the translatable fields and assigned to the
        language-specific model fields, while keeping parent serializer validation logic/
        definitions.

        This stripped down serializer is applied for every language code in
        settings.LANGUAGES. Effectively, this results in a structure like:

            ParentModelSerializer:
                ... other fields/serializers

                ModelTranslationsSerializer:
                    nl:
                        StrippedParentModelSerializer (nl)
                    en:
                        StrippedParentModelSerializer (en)
      properties:
        nl:
          allOf:
          - $ref: '#/components/schemas/FormNLTranslations'
          description: 'Content translations for: Dutch'
        en:
          allOf:
          - $ref: '#/components/schemas/FormENTranslations'
          description: 'Content translations for: English'
    FormNLTranslations:
      type: object
      description: |-
        Represent a single `Form` definition.

        Contains all the relevant metadata and configuration from the form design. Form
        renderers should use this as starting point.

        Note that this schema is used for both non-admin users filling out forms and
        admin users designing forms. The fields that are only relevant for admin users are:
        `internalName`, `registrationBackends`, `registrationBackend`, `registrationBackendOptions`, `authenticationBackendOptions`, `paymentBackend`, `paymentBackendOptions`, `product`, `category`, `theme`, `activateOn`, `deactivateOn`, `isDeleted`, `submissionConfirmationTemplate`, `askPrivacyConsent`, `askStatementOfTruth`, `submissionsRemovalOptions`, `confirmationEmailTemplate`, `sendConfirmationEmail`, `displayMainWebsiteLink`, `includeConfirmationPageContentInPdf`, `translations`, `brpPersonenRequestOptions`.
      properties:
        name:
          type: string
          nullable: true
          title: Name [nl]
          maxLength: 150
        submissionConfirmationTemplate:
          type: string
          nullable: true
          title: Submission confirmation template [nl]
          description: The content of the submission confirmation page. It can contain
            variables that will be templated from the submitted form data. If not
            specified, the global template will be used.
        beginText:
          type: string
          nullable: true
          title: Begin text [nl]
          description: The text that will be displayed at the start of the form to
            indicate the user can begin to fill in the form. Leave blank to get value
            from global configuration.
          maxLength: 50
        previousText:
          type: string
          nullable: true
          title: Previous text [nl]
          description: The text that will be displayed in the overview page to go
            to the previous step. Leave blank to get value from global configuration.
          maxLength: 50
        changeText:
          type: string
          nullable: true
          title: Change text [nl]
          description: The text that will be displayed in the overview page to change
            a certain step. Leave blank to get value from global configuration.
          maxLength: 50
        confirmText:
          type: string
          nullable: true
          title: Confirm text [nl]
          description: The text that will be displayed in the overview page to confirm
            the form is filled in correctly. Leave blank to get value from global
            configuration.
          maxLength: 50
        explanationTemplate:
          type: string
          nullable: true
          title: Explanation template [nl]
          description: Content that will be shown on the start page of the form, below
            the title and above the log in text.
    FormPriceLogic:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        form:
          type: string
          format: uri
          description: Form to which the pricing JSON logic applies.
        jsonLogicTrigger:
          title: JSON logic
          description: The trigger expression to determine if the actions should execute
            or not. Note that this must be a valid JsonLogic expression, and the first
            operand must be a reference to a variable in the form.
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - form
      - jsonLogicTrigger
      - price
      - url
      - uuid
    FormRegistrationBackend:
      type: object
      properties:
        key:
          type: string
          description: The key to use to refer to this configuration in form logic.
          maxLength: 50
        name:
          type: string
          description: A recognisable name for this backend configuration.
          maxLength: 255
        backend:
          type: string
          title: Registration backend
          maxLength: 100
        options:
          type: object
          additionalProperties: {}
          title: registration backend options
      required:
      - backend
      - key
      - name
      - options
    FormStep:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
        slug:
          type: string
          nullable: true
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        configuration:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionConfiguration'
          readOnly: true
        formDefinition:
          type: string
          format: uri
        name:
          type: string
          readOnly: true
        internalName:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        isApplicable:
          type: boolean
          description: Whether the step is applicable by default.
        loginRequired:
          type: boolean
          readOnly: true
        isReusable:
          type: boolean
          readOnly: true
        literals:
          $ref: '#/components/schemas/FormStepLiterals'
        translations:
          $ref: '#/components/schemas/FormStepModelTranslations'
        componentTranslations:
          allOf:
          - $ref: '#/components/schemas/ComponentTranslations'
          readOnly: true
      required:
      - componentTranslations
      - configuration
      - formDefinition
      - index
      - internalName
      - isReusable
      - loginRequired
      - name
      - url
      - uuid
    FormStepENTranslations:
      type: object
      properties:
        previousText:
          type: string
          nullable: true
          title: Step previous text [en]
          description: The text that will be displayed in the form step to go to the
            previous step. Leave blank to get value from global configuration.
          maxLength: 50
        saveText:
          type: string
          nullable: true
          title: Step save text [en]
          description: The text that will be displayed in the form step to save the
            current information. Leave blank to get value from global configuration.
          maxLength: 50
        nextText:
          type: string
          nullable: true
          title: Step next text [en]
          description: The text that will be displayed in the form step to go to the
            next step. Leave blank to get value from global configuration.
          maxLength: 50
    FormStepLiterals:
      type: object
      properties:
        previousText:
          $ref: '#/components/schemas/ButtonText'
        saveText:
          $ref: '#/components/schemas/ButtonText'
        nextText:
          $ref: '#/components/schemas/ButtonText'
    FormStepModelTranslations:
      type: object
      description: |-
        Nest a model's translatable fields inside the serializer.

        This serializer takes the structure of the parent serializer it's included in
        and analyzes the model it belongs to to extract the translatable fields. The parent
        serializer is stripped down for only the translatable fields and assigned to the
        language-specific model fields, while keeping parent serializer validation logic/
        definitions.

        This stripped down serializer is applied for every language code in
        settings.LANGUAGES. Effectively, this results in a structure like:

            ParentModelSerializer:
                ... other fields/serializers

                ModelTranslationsSerializer:
                    nl:
                        StrippedParentModelSerializer (nl)
                    en:
                        StrippedParentModelSerializer (en)
      properties:
        nl:
          allOf:
          - $ref: '#/components/schemas/FormStepNLTranslations'
          description: 'Content translations for: Dutch'
        en:
          allOf:
          - $ref: '#/components/schemas/FormStepENTranslations'
          description: 'Content translations for: English'
    FormStepNLTranslations:
      type: object
      properties:
        previousText:
          type: string
          nullable: true
          title: Step previous text [nl]
          description: The text that will be displayed in the form step to go to the
            previous step. Leave blank to get value from global configuration.
          maxLength: 50
        saveText:
          type: string
          nullable: true
          title: Step save text [nl]
          description: The text that will be displayed in the form step to save the
            current information. Leave blank to get value from global configuration.
          maxLength: 50
        nextText:
          type: string
          nullable: true
          title: Step next text [nl]
          description: The text that will be displayed in the form step to go to the
            next step. Leave blank to get value from global configuration.
          maxLength: 50
    FormVariable:
      type: object
      properties:
        form:
          type: string
          format: uri
          description: Form to which this variable is related
        formDefinition:
          type: string
          format: uri
          nullable: true
          description: Form definition to which this variable is related. This is
            kept as metadata
        name:
          type: string
          description: Name of the variable
        key:
          type: string
          description: Key of the variable, should be unique with the form.
          pattern: ^(\w|\w[\w.\-]*\w)$
        source:
          allOf:
          - $ref: '#/components/schemas/SourceEnum'
          description: |-
            Where will the data that will be associated with this variable come from

            * `component` - Component
            * `user_defined` - User defined
        serviceFetchConfiguration:
          allOf:
          - $ref: '#/components/schemas/ServiceFetchConfiguration'
          nullable: true
        prefillPlugin:
          type: string
          description: Which, if any, prefill plugin should be used
          maxLength: 50
        prefillAttribute:
          type: string
          description: Which attribute from the prefill response should be used to
            fill this variable
          maxLength: 200
        prefillIdentifierRole:
          allOf:
          - $ref: '#/components/schemas/PrefillIdentifierRoleEnum'
          description: |-
            In case that multiple identifiers are returned (in the case of eHerkenning bewindvoering and DigiD Machtigen), should the prefill data related to the main identifier be used, or that related to the authorised person?

            * `main` - Main
            * `authorised_person` - Authorised person
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataTypeEnum'
          description: |-
            The type of the value that will be associated with this variable

            * `string` - String
            * `boolean` - Boolean
            * `object` - Object
            * `array` - Array
            * `int` - Integer
            * `float` - Float
            * `datetime` - Datetime
            * `time` - Time
            * `date` - Date
        dataFormat:
          type: string
          description: The format of the value that will be associated with this variable
          maxLength: 250
        isSensitiveData:
          type: boolean
          description: Will this variable be associated with sensitive data?
        initialValue:
          nullable: true
          description: The initial value for this field
      required:
      - dataType
      - form
      - key
      - name
      - source
    FormVersion:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
          readOnly: true
          description: Date and time of creation of the form version.
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        description:
          type: string
          title: Version description
          description: Description/context about this particular version.
        appRelease:
          type: string
          readOnly: true
          title: Application version
          description: App release/version at the time this version was created.
        appGitSha:
          type: string
          readOnly: true
          title: Application commit hash
          description: Application commit hash at the time this version was created.
      required:
      - appGitSha
      - appRelease
      - created
      - user
    GenericObject:
      type: object
      description: Generic object
      additionalProperties: true
    GetStreetNameAndCityViewResult:
      type: object
      properties:
        streetName:
          type: string
          description: Found street name
        city:
          type: string
          description: Found city
      required:
      - city
      - streetName
    IncompleteSubmissionsRemovalMethodEnum:
      enum:
      - delete_permanently
      - make_anonymous
      type: string
      description: |-
        * `delete_permanently` - Submissions will be deleted
        * `make_anonymous` - Sensitive data within the submissions will be deleted
    InformatieObjectType:
      type: object
      properties:
        url:
          type: string
        omschrijving:
          type: string
      required:
      - omschrijving
      - url
    InformatieObjectTypeChoice:
      type: object
      properties:
        informatieobjecttype:
          $ref: '#/components/schemas/InformatieObjectType'
        catalogus:
          $ref: '#/components/schemas/CatalogusDomain'
      required:
      - catalogus
      - informatieobjecttype
    Language:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/AvailableLanguagesEnum'
          description: |-
            RFC5646 language tag, e.g. `en` or `en-us`

            * `nl` - Dutch
            * `en` - English
        name:
          type: string
          description: Language name in its local representation. e.g. "fy" = "frysk",
            "nl" = "Nederlands"
      required:
      - code
      - name
    LanguageCode:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/AvailableLanguagesEnum'
          description: |-
            RFC5646 language tag, e.g. `en` or `en-us`

            * `nl` - Dutch
            * `en` - English
      required:
      - code
    LanguageInfo:
      type: object
      properties:
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
          readOnly: true
          description: Available languages
        current:
          allOf:
          - $ref: '#/components/schemas/AvailableLanguagesEnum'
          description: |-
            RFC5646 language tag, e.g. `en` or `en-us`

            * `nl` - Dutch
            * `en` - English
      required:
      - current
      - languages
    LatLngSearchResult:
      type: object
      properties:
        label:
          type: string
          title: Closest address
      required:
      - label
    LatitudeLongitude:
      type: object
      properties:
        lat:
          type: number
          format: double
          title: Latitude
        lng:
          type: number
          format: double
          title: Longitude
      required:
      - lat
      - lng
    Location:
      type: object
      properties:
        identifier:
          type: string
          description: ID of the location
        name:
          type: string
          description: Location name
      required:
      - identifier
      - name
    LogicActionPolymorphic:
      oneOf:
      - $ref: '#/components/schemas/LogicActionPolymorphicGenericObject'
      - $ref: '#/components/schemas/LogicActionPolymorphicLogicPropertyAction'
      - $ref: '#/components/schemas/LogicActionPolymorphicLogicValueAction'
      - $ref: '#/components/schemas/LogicActionPolymorphicLogicFetchAction'
      - $ref: '#/components/schemas/LogicActionPolymorphicDMNEvaluateAction'
      - $ref: '#/components/schemas/LogicActionPolymorphicLogicSetRegistrationBackendAction'
      discriminator:
        propertyName: type
        mapping:
          disable-next: '#/components/schemas/LogicActionPolymorphicGenericObject'
          property: '#/components/schemas/LogicActionPolymorphicLogicPropertyAction'
          step-not-applicable: '#/components/schemas/LogicActionPolymorphicGenericObject'
          step-applicable: '#/components/schemas/LogicActionPolymorphicGenericObject'
          variable: '#/components/schemas/LogicActionPolymorphicLogicValueAction'
          fetch-from-service: '#/components/schemas/LogicActionPolymorphicLogicFetchAction'
          evaluate-dmn: '#/components/schemas/LogicActionPolymorphicDMNEvaluateAction'
          set-registration-backend: '#/components/schemas/LogicActionPolymorphicLogicSetRegistrationBackendAction'
    LogicActionPolymorphicDMNEvaluateAction:
      allOf:
      - $ref: '#/components/schemas/LogicActionPolymorphicShared'
      - $ref: '#/components/schemas/DMNEvaluateAction'
    LogicActionPolymorphicGenericObject:
      allOf:
      - $ref: '#/components/schemas/LogicActionPolymorphicShared'
      - $ref: '#/components/schemas/GenericObject'
    LogicActionPolymorphicLogicFetchAction:
      allOf:
      - $ref: '#/components/schemas/LogicActionPolymorphicShared'
      - $ref: '#/components/schemas/LogicFetchAction'
    LogicActionPolymorphicLogicPropertyAction:
      allOf:
      - $ref: '#/components/schemas/LogicActionPolymorphicShared'
      - $ref: '#/components/schemas/LogicPropertyAction'
    LogicActionPolymorphicLogicSetRegistrationBackendAction:
      allOf:
      - $ref: '#/components/schemas/LogicActionPolymorphicShared'
      - $ref: '#/components/schemas/LogicSetRegistrationBackendAction'
    LogicActionPolymorphicLogicValueAction:
      allOf:
      - $ref: '#/components/schemas/LogicActionPolymorphicShared'
      - $ref: '#/components/schemas/LogicValueAction'
    LogicActionPolymorphicShared:
      type: object
      description: |-
        Polymorphic serializer base class.

        Note that the discriminator field must exist at the same depth as the mapped
        serializer fields for the OpenAPI introspection. See
        https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for
        more information. As such, it's not possible to define something like:

        {
            "object_type": "foo",
            "polymorphic_context": {
                <foo-specific fields>
            }
        }

        without explicitly wrapping this in a parent serializer, i.e. -
        ``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires
        access to the ``object_type`` in the parent scope.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/LogicActionPolymorphicSharedTypeEnum'
          description: |-
            Action type for this particular action.

            * `step-not-applicable` - Mark the form step as not-applicable
            * `step-applicable` - Mark the form step as applicable
            * `disable-next` - Disable the next step
            * `property` - Modify a component property
            * `variable` - Set the value of a variable
            * `fetch-from-service` - Fetch the value from a service
            * `set-registration-backend` - Set the registration backend to use for the submission
            * `evaluate-dmn` - Evaluate DMN
      required:
      - type
    LogicActionPolymorphicSharedTypeEnum:
      enum:
      - step-not-applicable
      - step-applicable
      - disable-next
      - property
      - variable
      - fetch-from-service
      - set-registration-backend
      - evaluate-dmn
      type: string
      description: |-
        * `step-not-applicable` - Mark the form step as not-applicable
        * `step-applicable` - Mark the form step as applicable
        * `disable-next` - Disable the next step
        * `property` - Modify a component property
        * `variable` - Set the value of a variable
        * `fetch-from-service` - Fetch the value from a service
        * `set-registration-backend` - Set the registration backend to use for the submission
        * `evaluate-dmn` - Evaluate DMN
    LogicComponentAction:
      type: object
      properties:
        component:
          type: string
          title: Form.io component
          description: 'Sleutel van de Form.io-component waarop de actie van toepassing
            is. Dit veld is verplicht voor de actietypes `property` - anders is het
            optioneel. '
        variable:
          type: string
          title: Key of the target variable
          description: Sleutel van de variabele die aangepast wordt door de actie.
            Dit veld is verplicht voor de actietypes `variable` - anders is het optioneel.
        formStep:
          type: string
          format: uri
          nullable: true
          description: De formulierstap die wordt beïnvloed door de actie. Dit veld
            is verplicht als het actietype `step-not-applicable` is, anders optioneel.
          deprecated: true
        formStepUuid:
          type: string
          format: uuid
          nullable: true
          title: form step
          description: De formulierstap die wordt beïnvloed door de actie. Dit veld
            is verplicht als het actietype `step-not-applicable` is, anders optioneel.
        action:
          $ref: '#/components/schemas/LogicActionPolymorphic'
      required:
      - action
    LogicDescription:
      type: object
      properties:
        expression:
          writeOnly: true
          title: JsonLogic expression
        description:
          type: string
          readOnly: true
          title: generated description
          description: Description derived from the input expression
      required:
      - description
      - expression
    LogicFetchAction:
      type: object
      properties:
        value:
          title: service_fetch_configuration
      required:
      - value
    LogicPropertyAction:
      type: object
      properties:
        property:
          $ref: '#/components/schemas/ComponentProperty'
        state:
          title: value of the property
          description: 'Valid JSON determining the new value of the specified property.
            For example: `true` or `false`.'
      required:
      - property
      - state
    LogicSetRegistrationBackendAction:
      type: object
      properties:
        value:
          type: string
          title: registration_backend_key
      required:
      - value
    LogicValueAction:
      type: object
      properties:
        value:
          description: A valid JsonLogic expression describing the value. This may
            refer to (other) Form.io components.
      required:
      - value
    LoginLogo:
      type: object
      properties:
        title:
          type: string
          readOnly: true
          description: Display title (for accessibility)
        imageSrc:
          type: string
          format: uri
          readOnly: true
          title: Image URL
          description: URL to the logo image
        href:
          type: string
          format: uri
          readOnly: true
          title: Click URL
          description: Information link to the authentication provider
        appearance:
          allOf:
          - $ref: '#/components/schemas/AppearanceEnum'
          readOnly: true
          title: Login logo appearance
          description: |-
            The appearance of the login logo (dark/light)

            * `dark` - Dark
            * `light` - Light
      required:
      - appearance
      - href
      - imageSrc
      - title
    LoginOption:
      type: object
      properties:
        identifier:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
          title: Button label
          description: Button label
        url:
          type: string
          format: uri
          readOnly: true
          title: Login URL
          description: URL to start login flow, expects 'next' GET-parameter with
            return url
        logo:
          allOf:
          - $ref: '#/components/schemas/LoginLogo'
          readOnly: true
          title: Optional logo
          description: Optional logo
        isForGemachtigde:
          type: boolean
          readOnly: true
          description: This authorization method can be used to log in on behalf of
            another person or company
      required:
      - identifier
      - isForGemachtigde
      - label
      - logo
      - url
    MethodEnum:
      enum:
      - GET
      - POST
      type: string
      description: |-
        * `GET` - GET
        * `POST` - POST
    MinimalFormStep:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        formDefinition:
          type: string
          readOnly: true
        index:
          type: integer
        literals:
          $ref: '#/components/schemas/FormStepLiterals'
        url:
          type: string
          format: uri
        isApplicable:
          type: boolean
          description: Whether the step is applicable by default.
      required:
      - formDefinition
      - index
      - url
      - uuid
    NestedSubmissionPaymentDetail:
      type: object
      properties:
        isRequired:
          type: boolean
          readOnly: true
          title: payment required
          description: Whether the registration requires payment.
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
          title: payment amount
          description: Amount (to be) paid
        hasPaid:
          type: boolean
          readOnly: true
          title: user has paid
          description: Whether the user has completed the required payment.
      required:
      - amount
      - hasPaid
      - isRequired
    NestedSubmissionStep:
      type: object
      description: |-
        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead
        of primary key relationships.  Specifically:

        * A 'url' field is included instead of the 'id' field.
        * Relationships to other instances are hyperlinks, instead of primary keys.

        NOTE: this only works with DRF 3.1.0 and above.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        url:
          type: string
          format: uri
          readOnly: true
        formStep:
          type: string
          format: uri
          readOnly: true
        isApplicable:
          type: boolean
          readOnly: true
        completed:
          type: boolean
          readOnly: true
        canSubmit:
          type: boolean
          readOnly: true
      required:
      - canSubmit
      - completed
      - formStep
      - id
      - isApplicable
      - name
      - url
    Objecttype:
      type: object
      properties:
        url:
          type: string
          format: uri
          title: URL reference to this object. This is the unique identification and
            location of this object.
        uuid:
          type: string
          format: uuid
          title: Unique identifier (UUID4).
        name:
          type: string
          title: Name of the object type.
        namePlural:
          type: string
          title: Plural name of the object type.
        dataClassification:
          type: string
          title: Confidential level of the object type.
      required:
      - dataClassification
      - name
      - namePlural
      - url
      - uuid
    ObjecttypeVersion:
      type: object
      properties:
        version:
          type: integer
          title: Integer version of the Objecttype.
        status:
          type: string
          title: Status of the object type version
      required:
      - status
      - version
    PaginatedFormDefinitionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FormDefinition'
    PaginatedServiceFetchConfigurationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceFetchConfiguration'
    PaginatedSubmissionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Submission'
    PatchedForm:
      type: object
      description: |-
        Represent a single `Form` definition.

        Contains all the relevant metadata and configuration from the form design. Form
        renderers should use this as starting point.

        Note that this schema is used for both non-admin users filling out forms and
        admin users designing forms. The fields that are only relevant for admin users are:
        `internalName`, `registrationBackends`, `registrationBackend`, `registrationBackendOptions`, `authenticationBackendOptions`, `paymentBackend`, `paymentBackendOptions`, `product`, `category`, `theme`, `activateOn`, `deactivateOn`, `isDeleted`, `submissionConfirmationTemplate`, `askPrivacyConsent`, `askStatementOfTruth`, `submissionsRemovalOptions`, `confirmationEmailTemplate`, `sendConfirmationEmail`, `displayMainWebsiteLink`, `includeConfirmationPageContentInPdf`, `translations`, `brpPersonenRequestOptions`.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        internalName:
          type: string
          description: internal name for management purposes
          maxLength: 150
        loginRequired:
          type: boolean
          readOnly: true
        translationEnabled:
          type: boolean
        registrationBackends:
          type: array
          items:
            $ref: '#/components/schemas/FormRegistrationBackend'
        registrationBackend:
          type: string
          deprecated: true
        registrationBackendOptions:
          nullable: true
          deprecated: true
        authenticationBackends:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationBackendsEnum'
          writeOnly: true
        authenticationBackendOptions:
          type: object
          additionalProperties: {}
        loginOptions:
          type: array
          items:
            $ref: '#/components/schemas/LoginOption'
          readOnly: true
        autoLoginAuthenticationBackend:
          type: string
          description: The authentication backend to which the user will be automatically
            redirected upon starting the form. The chosen backend must be present
            in `authentication_backends`
        paymentRequired:
          type: boolean
          readOnly: true
        paymentBackend:
          default: ''
          oneOf:
          - $ref: '#/components/schemas/PaymentBackendEnum'
          - $ref: '#/components/schemas/BlankEnum'
        paymentBackendOptions:
          type: object
          additionalProperties: {}
          nullable: true
        paymentOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentOption'
          readOnly: true
        appointmentOptions:
          allOf:
          - $ref: '#/components/schemas/AppointmentOptions'
          nullable: true
        literals:
          $ref: '#/components/schemas/FormLiterals'
        product:
          type: string
          format: uri
          nullable: true
          description: URL to the product in the Open Forms API
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        url:
          type: string
          format: uri
          readOnly: true
        category:
          type: string
          format: uri
          nullable: true
          description: URL to the category in the Open Forms API
        theme:
          type: string
          format: uri
          nullable: true
          description: URL to the theme in the Open Forms API
        steps:
          type: array
          items:
            $ref: '#/components/schemas/MinimalFormStep'
          readOnly: true
        showProgressIndicator:
          type: boolean
          description: Whether the step progression should be displayed in the UI
            or not.
        maintenanceMode:
          type: boolean
          description: Users will not be able to start the form if it is in maintenance
            mode.
        active:
          type: boolean
        activateOn:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which the form should be activated.
        deactivateOn:
          type: string
          format: date-time
          nullable: true
          description: Date and time on which the form should be deactivated.
        isDeleted:
          type: boolean
        submissionConfirmationTemplate:
          type: string
          description: The content of the submission confirmation page. It can contain
            variables that will be templated from the submitted form data. If not
            specified, the global template will be used.
        explanationTemplate:
          type: string
          description: Content that will be shown on the start page of the form, below
            the title and above the log in text.
        submissionAllowed:
          allOf:
          - $ref: '#/components/schemas/SubmissionAllowedEnum'
          description: |-
            Whether the user is allowed to submit this form or not, and whether the overview page should be shown if they are not.

            * `yes` - Yes
            * `no_with_overview` - No (with overview page)
            * `no_without_overview` - No (without overview page)
        suspensionAllowed:
          type: boolean
          description: Whether the user is allowed to suspend this form or not.
        askPrivacyConsent:
          allOf:
          - $ref: '#/components/schemas/StatementCheckboxEnum'
          description: |-
            If enabled, the user will have to agree to the privacy policy before submitting a form.

            * `global_setting` - Global setting
            * `required` - Required
            * `disabled` - Disabled
        askStatementOfTruth:
          allOf:
          - $ref: '#/components/schemas/StatementCheckboxEnum'
          description: |-
            If enabled, the user will have to agree that they filled out the form truthfully before submitting it.

            * `global_setting` - Global setting
            * `required` - Required
            * `disabled` - Disabled
        submissionsRemovalOptions:
          $ref: '#/components/schemas/SubmissionsRemovalOptions'
        confirmationEmailTemplate:
          allOf:
          - $ref: '#/components/schemas/ConfirmationEmailTemplate'
          nullable: true
        sendConfirmationEmail:
          type: boolean
          description: Whether a confirmation email should be sent to the end user
            filling in the form.
        displayMainWebsiteLink:
          type: boolean
          description: Display the link to the main website on the submission confirmation
            page.
        includeConfirmationPageContentInPdf:
          type: boolean
          description: Display the instruction from the confirmation page in the PDF.
        requiredFieldsWithAsterisk:
          type: boolean
          readOnly: true
        translations:
          $ref: '#/components/schemas/FormModelTranslations'
        resumeLinkLifetime:
          type: integer
          readOnly: true
          description: The number of days that the resume link is valid for.
        hideNonApplicableSteps:
          type: boolean
          readOnly: true
        cosignLoginOptions:
          type: array
          items:
            $ref: '#/components/schemas/LoginOption'
          readOnly: true
        cosignLoginInfo:
          allOf:
          - $ref: '#/components/schemas/CosignLoginInfo'
          readOnly: true
          deprecated: true
        submissionStatementsConfiguration:
          type: array
          items:
            type: object
            description: Eén enkel Form.io selectievakjecomponent voor de verklaring
              die een gebruiker mogelijks moet accepteren voor het formulier ingestuurd
              kan worden.
            properties:
              type:
                type: string
                description: Component type (checkbox)
              key:
                type: string
                description: Key of the statement field
              label:
                type: string
                description: Text of the statement
              validate:
                type: object
                properties:
                  required:
                    type: boolean
                    description: Whether accepting this statement is required or not.
            title: Statement checkbox
          readOnly: true
          description: A list of statements that need to be accepted by the user before
            they can submit a form. Returns a list of formio component definitions,
            all of type 'checkbox'.
        submissionReportDownloadLinkTitle:
          type: string
          readOnly: true
        brpPersonenRequestOptions:
          allOf:
          - $ref: '#/components/schemas/BRPPersonenRequestOptions'
          nullable: true
    PatchedFormDefinition:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        uuid:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 50
        internalName:
          type: string
          description: internal name for management purposes
          maxLength: 50
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
          deprecated: true
        configuration:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionConfiguration'
          title: Form.io configuration
          description: The form definition as Form.io JSON schema
        loginRequired:
          type: boolean
          description: DigID Login required for form step
        isReusable:
          type: boolean
          description: Allow this definition to be re-used in multiple forms
        translations:
          $ref: '#/components/schemas/FormDefinitionModelTranslations'
        componentTranslations:
          allOf:
          - $ref: '#/components/schemas/ComponentTranslations'
          nullable: true
    PatchedFormStep:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        index:
          type: integer
        slug:
          type: string
          nullable: true
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        configuration:
          allOf:
          - $ref: '#/components/schemas/FormDefinitionConfiguration'
          readOnly: true
        formDefinition:
          type: string
          format: uri
        name:
          type: string
          readOnly: true
        internalName:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        isApplicable:
          type: boolean
          description: Whether the step is applicable by default.
        loginRequired:
          type: boolean
          readOnly: true
        isReusable:
          type: boolean
          readOnly: true
        literals:
          $ref: '#/components/schemas/FormStepLiterals'
        translations:
          $ref: '#/components/schemas/FormStepModelTranslations'
        componentTranslations:
          allOf:
          - $ref: '#/components/schemas/ComponentTranslations'
          readOnly: true
    PaymentBackendEnum:
      enum:
      - ogone-legacy
      type: string
      description: "* `` - \n* `ogone-legacy` - Ogone legacy"
    PaymentInfo:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PaymentInfoTypeEnum'
          readOnly: true
          title: Request type
        url:
          type: string
          format: uri
          readOnly: true
        data:
          type: object
          additionalProperties:
            type: string
            readOnly: true
            title: Value
          readOnly: true
      required:
      - data
      - type
      - url
    PaymentInfoTypeEnum:
      enum:
      - get
      - post
      type: string
      description: |-
        * `get` - Get
        * `post` - Post
    PaymentOption:
      type: object
      properties:
        identifier:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
          title: Button label
          description: Button label
      required:
      - identifier
      - label
    PaymentPlugin:
      type: object
      description: Serialize the available plugins for the form builder.
      properties:
        id:
          type: string
          description: The unique plugin identifier
        label:
          type: string
          description: The human-readable name for a plugin.
        schema:
          type: object
          additionalProperties: {}
          title: JSON schema
          description: The generated JSON schema for the plugin options.
      required:
      - id
      - label
      - schema
    PrefillAttribute:
      type: object
      properties:
        id:
          type: string
          description: The unique attribute identifier
        label:
          type: string
          description: The human-readable name for an attribute.
      required:
      - id
      - label
    PrefillIdentifierRoleEnum:
      enum:
      - main
      - authorised_person
      type: string
      description: |-
        * `main` - Main
        * `authorised_person` - Authorised person
    PrefillPlugin:
      type: object
      properties:
        id:
          type: string
          description: The unique plugin identifier
        label:
          type: string
          description: The human-readable name for a plugin.
        requiresAuth:
          type: string
          nullable: true
          title: Required authentication attribute
          description: The authentication attribute required for this plugin to lookup
            remote data.
      required:
      - id
      - label
      - requiresAuth
    PrivacyPolicyInfo:
      type: object
      properties:
        requiresPrivacyConsent:
          type: boolean
          description: Of de gebruiker akkoord moet gaan met het privacybeleid voordat
            hij een formulier indient.
        privacyLabel:
          type: string
          description: Het opgemaakte label dat naast het selectievakje moet worden
            getoond wanneer de gebruiker wordt gevraagd akkoord te gaan met het privacybeleid.
      required:
      - requiresPrivacyConsent
    ProcessDefinition:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
          description: The process definition identifier, used to group different
            versions.
        name:
          type: string
          description: The human-readable name of the process definition.
        version:
          type: integer
          description: The version identifier relative to the 'key'.
      required:
      - id
      - key
      - name
      - version
    Product:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
          description: Globally unique identifier
        name:
          type: string
          maxLength: 50
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        information:
          type: string
          description: Information text to be displayed in the confirmation page and
            confirmation email.
      required:
      - name
      - price
      - url
      - uuid
    RegistrationAttribute:
      type: object
      properties:
        id:
          type: string
          description: The unique attribute identifier
        label:
          type: string
          description: The human-readable name for an attribute.
      required:
      - id
      - label
    RegistrationPlugin:
      type: object
      properties:
        id:
          type: string
          description: The unique plugin identifier
        label:
          type: string
          description: The human-readable name for a plugin.
        schema:
          type: object
          additionalProperties: {}
          title: JSON schema
          description: The generated JSON schema for the plugin options.
      required:
      - id
      - label
      - schema
    ResultEnum:
      enum:
      - failed
      - success
      type: string
      description: |-
        * `failed` - Failed, should return to the start of the form.
        * `success` - Success, proceed to confirmation page.
    RijksDriehoek:
      type: object
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double
      required:
      - x
      - y
    Service:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        label:
          type: string
          maxLength: 100
        apiRoot:
          type: string
          title: Api root url
          maxLength: 255
        apiType:
          allOf:
          - $ref: '#/components/schemas/ApiTypeEnum'
          title: Type
      required:
      - apiRoot
      - apiType
      - label
      - url
      x-experimental: true
    ServiceFetchConfiguration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: human readable name for the configuration
          maxLength: 250
        service:
          type: string
          format: uri
        path:
          type: string
          description: path relative to the Service API root
          maxLength: 250
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          title: HTTP method
          description: |-
            POST is allowed, but should not be used to mutate data

            * `GET` - GET
            * `POST` - POST
        headers:
          type: object
          additionalProperties: {}
          title: HTTP request headers
          description: Additions and overrides for the HTTP request headers as defined
            in the Service.
        queryParams:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          title: HTTP query string
        body:
          nullable: true
          title: HTTP request body
          description: Request body for POST requests (only "application/json" is
            supported)
        dataMappingType:
          title: Mapping expression language
          oneOf:
          - $ref: '#/components/schemas/DataMappingTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        mappingExpression:
          nullable: true
          description: For jq, pass a string containing the filter expression
        cacheTimeout:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: The responses for service fetch are cached to prevent repeating
            the same request multiple times when performing the logic check. If specified,
            the cached responses will expire after the timeout (in seconds).
      required:
      - id
      - name
      - service
    SourceEnum:
      enum:
      - component
      - user_defined
      type: string
      description: |-
        * `component` - Component
        * `user_defined` - User defined
    StatementCheckboxEnum:
      enum:
      - global_setting
      - required
      - disabled
      type: string
      description: |-
        * `global_setting` - Global setting
        * `required` - Required
        * `disabled` - Disabled
    StatusEnum:
      enum:
      - in_progress
      - done
      type: string
      description: |-
        * `in_progress` - In progress
        * `done` - Done
    Submission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          title: UUID
        url:
          type: string
          format: uri
          readOnly: true
        form:
          type: string
          format: uri
        steps:
          type: array
          items:
            $ref: '#/components/schemas/NestedSubmissionStep'
          readOnly: true
          title: Submission steps
          description: Details of every form step of this submission's form, tracking
            the progress and other meta-data of each particular step.
        submissionAllowed:
          allOf:
          - $ref: '#/components/schemas/SubmissionAllowedEnum'
          readOnly: true
          description: |-
            Whether the user is allowed to submit this form and whether the user should see the overview page.

            * `yes` - Yes
            * `no_with_overview` - No (with overview page)
            * `no_without_overview` - No (without overview page)
        isAuthenticated:
          type: boolean
          readOnly: true
          description: Whether the user was authenticated when creating this submission.
        payment:
          allOf:
          - $ref: '#/components/schemas/NestedSubmissionPaymentDetail'
          readOnly: true
          title: payment information
        formUrl:
          type: string
          format: uri
          description: URL where the user initialized the submission.
          maxLength: 1000
      required:
      - form
      - formUrl
      - id
      - isAuthenticated
      - payment
      - steps
      - submissionAllowed
      - url
    SubmissionAllowedEnum:
      enum:
      - 'yes'
      - no_with_overview
      - no_without_overview
      type: string
      description: |-
        * `yes` - Yes
        * `no_with_overview` - No (with overview page)
        * `no_without_overview` - No (without overview page)
    SubmissionCoSignStatus:
      type: object
      properties:
        coSigned:
          type: boolean
          readOnly: true
          title: is co-signed?
          description: Indicator whether the submission has been co-signed or not.
        representation:
          type: string
          readOnly: true
          title: Co-signer display
          description: Co-signer representation string for the UI.
      required:
      - coSigned
      - representation
    SubmissionCompletion:
      type: object
      properties:
        statusUrl:
          type: string
          format: uri
          title: status check endpoint
          description: The API endpoint where the background processing status can
            be checked. After calling the completion endpoint, this status URL should
            be polled to report the processing status back to the end-user. Note that
            the endpoint contains a token which invalidates on state changes and after
            one day.
      required:
      - statusUrl
    SubmissionComponentSummary:
      type: object
      properties:
        name:
          type: string
          description: Display name of the component.
        value:
          description: Raw value of the component.
        component:
          type: object
          additionalProperties: {}
          description: Configuration of the component.
      required:
      - component
      - name
      - value
    SubmissionProcessingStatus:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: in_progress
          title: background processing status
          description: |-
            The async task state, managed by the async task queue. Once the status is `done`, check the `result` field for the outcome.

            * `in_progress` - In progress
            * `done` - Done
        result:
          title: background processing result
          description: |-
            The result from the background processing. This field only has a value if the processing has completed (both successfully or with errors).

            * `failed` - Failed, should return to the start of the form.
            * `success` - Success, proceed to confirmation page.
          oneOf:
          - $ref: '#/components/schemas/ResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        errorMessage:
          type: string
          title: Error information
          description: Error feedback in case the processing did not complete successfully.
        publicReference:
          type: string
          description: The public registration reference, sourced from the registration
            backend or otherwise uniquely generated in case the backend could not
            provide it.
        confirmationPageContent:
          type: string
          description: Body text of the confirmation page. May contain HTML!
        reportDownloadUrl:
          type: string
          format: uri
          description: Download URL for the generated PDF report. Note that this contain
            a timestamped token generated by the backend.
        paymentUrl:
          type: string
          format: uri
          description: URL to retrieve the payment information. Note that this (will)
            contain(s) a timestamped token generated by the backend.
        mainWebsiteUrl:
          type: string
          readOnly: true
      required:
      - mainWebsiteUrl
    SubmissionReportUrl:
      type: object
      properties:
        reportDownloadUrl:
          type: string
          format: uri
          readOnly: true
          title: download report url
          description: The URL where the submission report can be downloaded. Note
            that this contain a timestamped token generated by the backend.
      required:
      - reportDownloadUrl
    SubmissionStateLogic:
      type: object
      properties:
        submission:
          $ref: '#/components/schemas/Submission'
        step:
          $ref: '#/components/schemas/SubmissionStep'
      required:
      - step
      - submission
    SubmissionStep:
      type: object
      description: |-
        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead
        of primary key relationships.  Specifically:

        * A 'url' field is included instead of the 'id' field.
        * Relationships to other instances are hyperlinks, instead of primary keys.

        NOTE: this only works with DRF 3.1.0 and above.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          title: UUID
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        formStep:
          allOf:
          - $ref: '#/components/schemas/ContextAwareFormStep'
          readOnly: true
        data:
          type: object
          additionalProperties: {}
          nullable: true
        isApplicable:
          type: boolean
          readOnly: true
        completed:
          type: boolean
          readOnly: true
        canSubmit:
          type: boolean
          readOnly: true
      required:
      - canSubmit
      - completed
      - formStep
      - id
      - isApplicable
      - slug
    SubmissionStepSummarySerialzier:
      type: object
      properties:
        slug:
          type: string
          description: Slug of the form definition used in the form step.
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          description: Name of the form definition used in the form step.
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionComponentSummary'
      required:
      - data
      - name
      - slug
    SubmissionSuspension:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          title: Contact email address
          description: The email address where the 'magic' resume link should be sent
            to
        suspendedOn:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - email
      - suspendedOn
    SubmissionsRemovalOptions:
      type: object
      properties:
        successfulSubmissionsRemovalLimit:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          title: Successful submission removal limit
          description: Amount of days successful submissions of this form will remain
            before being removed. Leave blank to use value in General Configuration.
        successfulSubmissionsRemovalMethod:
          description: |-
            How successful submissions of this form will be removed after the limit. Leave blank to use value in General Configuration.

            * `delete_permanently` - Submissions will be deleted
            * `make_anonymous` - Sensitive data within the submissions will be deleted
          oneOf:
          - $ref: '#/components/schemas/IncompleteSubmissionsRemovalMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
        incompleteSubmissionsRemovalLimit:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          title: Incomplete submission removal limit
          description: Amount of days incomplete submissions of this form will remain
            before being removed. Leave blank to use value in General Configuration.
        incompleteSubmissionsRemovalMethod:
          description: |-
            How incomplete submissions of this form will be removed after the limit. Leave blank to use value in General Configuration.

            * `delete_permanently` - Submissions will be deleted
            * `make_anonymous` - Sensitive data within the submissions will be deleted
          oneOf:
          - $ref: '#/components/schemas/IncompleteSubmissionsRemovalMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
        erroredSubmissionsRemovalLimit:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          title: Errored submission removal limit
          description: Amount of days errored submissions of this form will remain
            before being removed. Leave blank to use value in General Configuration.
        erroredSubmissionsRemovalMethod:
          title: Errored submission removal limit
          description: |-
            How errored submissions of this form will be removed after the limit. Leave blank to use value in General Configuration.

            * `delete_permanently` - Submissions will be deleted
            * `make_anonymous` - Sensitive data within the submissions will be deleted
          oneOf:
          - $ref: '#/components/schemas/IncompleteSubmissionsRemovalMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
        allSubmissionsRemovalLimit:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Amount of days when all submissions of this form will be permanently
            deleted. Leave blank to use value in General Configuration.
    SubmitActionEnum:
      enum:
      - _save
      - _addanother
      - _continue
      type: string
      description: |-
        * `_save` - Save
        * `_addanother` - Save and add another
        * `_continue` - Save and continue editing
    TemporaryFileUpload:
      type: object
      description: |-
        https://help.form.io/integrations/filestorage/#url

        {
            url: 'http://link.to/file',
            name: 'The_Name_Of_The_File.doc',
            size: 1000
        }
      properties:
        file:
          type: string
          writeOnly: true
        url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
          title: File name
        size:
          type: integer
          readOnly: true
          title: File size
      required:
      - file
      - name
      - size
      - url
    TextChoice:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
      required:
      - label
      - value
    Theme:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: An easily recognizable name for the theme, used to identify
            it.
          maxLength: 100
      required:
      - name
      - url
    Time:
      type: object
      properties:
        time:
          type: string
          format: date-time
      required:
      - time
    UsedInForm:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        uuid:
          type: string
          format: uuid
        name:
          type: string
          readOnly: true
        active:
          type: boolean
        adminUrl:
          type: string
          format: uri
          readOnly: true
          description: Link to the change/view page in the admin interface
      required:
      - adminUrl
      - name
      - url
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        fullName:
          type: string
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
      required:
      - fullName
      - username
    ValidationError:
      type: object
      description: |-
        Error format for HTTP 4xx and 5xx errors.

        See https://docs.geostandaarden.nl/api/API-Strategie-ext/#error-handling-0 for the NL API strategy guidelines.
      properties:
        type:
          type: string
          description: URI reference to the error type, intended for developers
        code:
          type: string
          description: System code indicating the type of error
        title:
          type: string
          description: Generic title for the type of error
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: Extra information about the error, if available
        instance:
          type: string
          description: URI with reference to this specific occurrence of the error.
            This can be used in conjunction with server logs, for example.
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/FieldValidationError'
      required:
      - code
      - detail
      - instance
      - invalidParams
      - status
      - title
    ValidationInput:
      type: object
      properties:
        value:
          description: Value to be validated.
        submissionUuid:
          type: string
          format: uuid
          description: UUID of the submission.
      required:
      - submissionUuid
      - value
    ValidationPlugin:
      type: object
      properties:
        id:
          type: string
          description: The unique plugin identifier
        label:
          type: string
          description: The human-readable name for a plugin.
        forComponents:
          type: array
          items:
            type: string
          title: Components
          description: The components for which the plugin is relevant.
      required:
      - forComponents
      - id
      - label
    ValidationResult:
      type: object
      properties:
        isValid:
          type: boolean
          description: Boolean indicating value passed validation.
        messages:
          type: array
          items:
            type: string
            title: error message
            description: error message
          description: List of validation error messages for display.
      required:
      - isValid
      - messages
    VariableMapping:
      type: object
      properties:
        formVariable:
          type: string
          title: Key of the form variable.
          pattern: ^(\w|\w[\w.\-]*\w)$
        dmnVariable:
          type: string
          title: DMN input parameter name.
      required:
      - dmnVariable
      - formVariable
    _AppointmentProduct:
      type: object
      properties:
        productId:
          type: string
          description: Identifier of the product in the selected plugin.
          maxLength: 128
        amount:
          type: integer
          maximum: 32767
          minimum: 1
          description: Number of times (amount of people) the product is ordered
      required:
      - amount
      - productId
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: openforms_sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
externalDocs:
  description: Functional and technical documentation
  url: https://open-forms.readthedocs.io/
