---

extensions:
  basicauth/server:
    htpasswd:
      inline: |
        otel:supersecret

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        auth:
          authenticator: basicauth/server
      http:
        endpoint: 0.0.0.0:4318
        auth:
          authenticator: basicauth/server

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
  memory_limiter:
    check_interval: 1s
    limit_mib: 1024
  transform:
    metric_statements:
      - context: datapoint
        statements:
        - set(attributes["client"], resource.attributes["of.client"])
        - set(attributes["target"], resource.attributes["of.target"])

exporters:
  # NOTE: Prior to v0.86.0 use `logging` instead of `debug`.
  debug:
    verbosity: detailed
  # Exposes a metrics endpoint that prometheus can scrape
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: otel  # this becomes a prefix in the prometheus metrics: `otel_*`
    const_labels:
      environment: local_otel_collector
    resource_to_telemetry_conversion:
      enabled: true
  # traces tempo endpoint
  otlp:
    endpoint: tempo:4317
    tls:
      insecure: true

service:
  extensions: [basicauth/server]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [debug, otlp]
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, transform, batch]
      exporters: [debug, prometheus]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [debug]
